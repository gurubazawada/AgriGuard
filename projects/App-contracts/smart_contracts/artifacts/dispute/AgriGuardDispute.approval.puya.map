{
  "version": 3,
  "sources": [
    "../../dispute/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEQ;;AAAa;;AAAb;AACA;;AAA0B;;AAA1B;AACA;;AAAuB;AAAvB;AACA;AAAoB;AAApB;AAZR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;AAAA;;AA8MK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AA9LL;;;AA8LK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAxBA;;AAAA;AAAA;AAAA;;AAAA;AAtKL;;;AAsKK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA3DA;;AAAA;AAAA;AAAA;;AAAA;AA3GL;;;AAAA;;;AA2GK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAnDA;;AAAA;AAAA;AAAA;;AAAA;AAxDL;;;AAwDK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAvBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AAzBL;;;AAyBK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AApBL;;;AAoBK;;;AAAA;;AAAL;;;AAGQ;;AAAA;;AAAA;;AAER;;;AAG6B;AAAA;;AAAA;AAAA;AAAd;;AAAA;AAAP;AAEA;;AAAA;;AAAA;AACO;AAAP;AAER;;;AAGoC;;AAGX;;AAHjB;;AAGiB;AAAA;AAAA;AAAA;;AACzB;;;AACmB;AAAP;;AAAA;AAGS;;AAEE;;;;;;;;;;AAFF;AAGG;AAHH;AAIK;AAJL;AAOb;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAA;AAAA;AAAA;AAEO;AAAP;;AAAA;AAER;;;;;;;;;;AAGoC;;AAGb;;AAHf;;AAGe;AAAA;AAAA;;AACZ;;;AACQ;AAAP;;AAAA;AAGS;AAAA;;AAAA;AAAA;AACb;AAAwB;AAAxB;AAAA;;AAAA;AAAA;AAK0B;;AAAX;AAHA;;AAAA;;AAAA;AAAA;AAAA;AAIJ;AAJI;AAKD;AALC;AAMF;AANE;AASD;AAAA;AAAA;AAAA;;AAAd;;AAAA;AAAA;AAAA;AAAA;AAYkB;;AAAlB;;AACc;AAAd;;AACc;AAAd;;AAGM;;AAAc;;AAAd;AAAA;;;AAA4C;AAAA;AAAA;AAAA;AAAf;;AAAA;AAA7B;;;AAEF;;AAAe;AAAf;AAAA;AAAA;;AAEkB;AAAA;AAAA;AAAA;AAAf;;;;;;;;;AAAf;;;AACgB;;AAAe;AAAf;AAEA;;AAAoC;;;;;;;AAAlB;;;;;;;;;;;;;;;;AAE1B;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AArBA;;AAAA;AAuBR;;;;;;AAGoC;;AAC5B;;AAAkB;AAGiB;AAAA;AAApB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;;AAAhB;AAAX;;;AAQmB;AAAP;;AAAA;AAGS;;AAAA;;AAAA;AAAA;AAAA;AACI;;AAAd;AAAX;;;AACmB;AAAP;;AAAA;AAGO;;;;;;AAAX;;AAAW;AACK;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAExB;;;AACmB;AAAP;;AAAA;AAMqB;;AAAX;AAHF;;AAAA;;AAAA;AAAA;AAAA;AAMZ;;AAAA;AAAA;AAGG;;AAAQ;AAAR;AAAX;;;AACgD;;AAAA;AAAA;AAAA;AAAgC;AAAhC;AAAX;AAAzB;;AAAA;;AAIJ;;AAAA;;AAAA;AAAA;;AAAA;AAGc;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAgC;AAAA;AAAhC;AACI;;AAAf;AAAX;;;AACe;;AAAiC;;AAAjC;AAAf;;;AACgB;;AAAsB;AAAtB;;AAAA;;AAIJ;;AAAA;;AAAA;AAEG;AAAP;;AAAA;AAJQ;;AAAsB;;;;;;;;;;AAAtB;;AAAA;;;;;AAV+B;;AAAA;AAAA;AAAA;AAA+B;AAA/B;AAAX;AAAxB;;AAAA;;;;;AAgBZ;;;AAG2C;;AAAA;AAAA;AAApB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;;AAAhB;AAAX;;;AAQmB;;AAAP;AAAA;AASJ;;AAAA;AAAA;AAER;;;AAGqB;;AAAA;;AAAA;AAAA;AAGV;;;AACQ;;AAEQ;AAFR;AAGS;AAHT;AAIW;AAJX;AAAP;AAAA;AAOJ;;AAAA;AAAA;AAKkB;AAAA;AAAA;AAAA;AAAX;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 56 64"
    },
    "7": {
      "op": "bytecblock 0x0000000000000000 0x151f7c75 \"total_jurors\" 0x0000000000000001 \"admin\" \"next_dispute_id\" \"jurors\" \"disputes\" base32(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA) \"insurance_contract\" \"dispute_jurors\""
    },
    "190": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "192": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "195": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "\"admin\""
      ]
    },
    "197": {
      "op": "global ZeroAddress",
      "defined_out": [
        "\"admin\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"admin\"",
        "materialized_values%0#0"
      ]
    },
    "199": {
      "op": "app_global_put",
      "stack_out": []
    },
    "200": {
      "op": "bytec 9 // \"insurance_contract\"",
      "defined_out": [
        "\"insurance_contract\""
      ],
      "stack_out": [
        "\"insurance_contract\""
      ]
    },
    "202": {
      "op": "global ZeroAddress",
      "defined_out": [
        "\"insurance_contract\"",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "\"insurance_contract\"",
        "materialized_values%1#0"
      ]
    },
    "204": {
      "op": "app_global_put",
      "stack_out": []
    },
    "205": {
      "op": "bytec 5 // \"next_dispute_id\"",
      "defined_out": [
        "\"next_dispute_id\""
      ],
      "stack_out": [
        "\"next_dispute_id\""
      ]
    },
    "207": {
      "op": "intc_0 // 1",
      "defined_out": [
        "\"next_dispute_id\"",
        "1"
      ],
      "stack_out": [
        "\"next_dispute_id\"",
        "1"
      ]
    },
    "208": {
      "op": "app_global_put",
      "stack_out": []
    },
    "209": {
      "op": "bytec_2 // \"total_jurors\"",
      "defined_out": [
        "\"total_jurors\""
      ],
      "stack_out": [
        "\"total_jurors\""
      ]
    },
    "210": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"total_jurors\"",
        "0"
      ],
      "stack_out": [
        "\"total_jurors\"",
        "0"
      ]
    },
    "211": {
      "op": "app_global_put",
      "stack_out": []
    },
    "212": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "214": {
      "op": "bz main_after_if_else@13",
      "stack_out": []
    },
    "217": {
      "op": "pushbytess 0x894a716e 0x56f5e3fc 0xfcba023a 0x1335cdfd 0xb4a52d05 0xa3018936 0x66483b61 0x7e273b38 // method \"create_application(address)void\", method \"set_insurance_contract(address)uint64\", method \"register_juror()uint64\", method \"create_dispute(uint64)uint64\", method \"vote_on_dispute(uint64,uint64)uint64\", method \"get_dispute(uint64)(uint64,address,uint64,uint64,uint64,uint64)\", method \"get_juror_info(address)(address,uint64,uint64,uint64)\", method \"get_total_jurors()uint64\"",
      "defined_out": [
        "Method(create_application(address)void)",
        "Method(create_dispute(uint64)uint64)",
        "Method(get_dispute(uint64)(uint64,address,uint64,uint64,uint64,uint64))",
        "Method(get_juror_info(address)(address,uint64,uint64,uint64))",
        "Method(get_total_jurors()uint64)",
        "Method(register_juror()uint64)",
        "Method(set_insurance_contract(address)uint64)",
        "Method(vote_on_dispute(uint64,uint64)uint64)"
      ],
      "stack_out": [
        "Method(create_application(address)void)",
        "Method(set_insurance_contract(address)uint64)",
        "Method(register_juror()uint64)",
        "Method(create_dispute(uint64)uint64)",
        "Method(vote_on_dispute(uint64,uint64)uint64)",
        "Method(get_dispute(uint64)(uint64,address,uint64,uint64,uint64,uint64))",
        "Method(get_juror_info(address)(address,uint64,uint64,uint64))",
        "Method(get_total_jurors()uint64)"
      ]
    },
    "259": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create_application(address)void)",
        "Method(create_dispute(uint64)uint64)",
        "Method(get_dispute(uint64)(uint64,address,uint64,uint64,uint64,uint64))",
        "Method(get_juror_info(address)(address,uint64,uint64,uint64))",
        "Method(get_total_jurors()uint64)",
        "Method(register_juror()uint64)",
        "Method(set_insurance_contract(address)uint64)",
        "Method(vote_on_dispute(uint64,uint64)uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(create_application(address)void)",
        "Method(set_insurance_contract(address)uint64)",
        "Method(register_juror()uint64)",
        "Method(create_dispute(uint64)uint64)",
        "Method(vote_on_dispute(uint64,uint64)uint64)",
        "Method(get_dispute(uint64)(uint64,address,uint64,uint64,uint64,uint64))",
        "Method(get_juror_info(address)(address,uint64,uint64,uint64))",
        "Method(get_total_jurors()uint64)",
        "tmp%2#0"
      ]
    },
    "262": {
      "op": "match main_create_application_route@5 main_set_insurance_contract_route@6 main_register_juror_route@7 main_create_dispute_route@8 main_vote_on_dispute_route@9 main_get_dispute_route@10 main_get_juror_info_route@11 main_get_total_jurors_route@12",
      "stack_out": []
    },
    "280": {
      "block": "main_after_if_else@13",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "281": {
      "op": "return",
      "stack_out": []
    },
    "282": {
      "block": "main_get_total_jurors_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "284": {
      "op": "!",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "285": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "286": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "288": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "289": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.get_total_jurors",
      "op": "callsub get_total_jurors",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "292": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "0x151f7c75"
      ]
    },
    "293": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%47#0"
      ]
    },
    "294": {
      "op": "concat",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "295": {
      "op": "log",
      "stack_out": []
    },
    "296": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "297": {
      "op": "return",
      "stack_out": []
    },
    "298": {
      "block": "main_get_juror_info_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "300": {
      "op": "!",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "301": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "302": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "304": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "305": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "308": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.get_juror_info",
      "op": "callsub get_juror_info",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "311": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "0x151f7c75"
      ]
    },
    "312": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%41#0"
      ]
    },
    "313": {
      "op": "concat",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "314": {
      "op": "log",
      "stack_out": []
    },
    "315": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "316": {
      "op": "return",
      "stack_out": []
    },
    "317": {
      "block": "main_get_dispute_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "319": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "320": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "321": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "323": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "324": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "327": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.get_dispute",
      "op": "callsub get_dispute",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "330": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "0x151f7c75"
      ]
    },
    "331": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%35#0"
      ]
    },
    "332": {
      "op": "concat",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "333": {
      "op": "log",
      "stack_out": []
    },
    "334": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "335": {
      "op": "return",
      "stack_out": []
    },
    "336": {
      "block": "main_vote_on_dispute_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "338": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "339": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "340": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "342": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "343": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "346": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "349": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.vote_on_dispute",
      "op": "callsub vote_on_dispute",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "352": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "0x151f7c75"
      ]
    },
    "353": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%29#0"
      ]
    },
    "354": {
      "op": "concat",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "355": {
      "op": "log",
      "stack_out": []
    },
    "356": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "357": {
      "op": "return",
      "stack_out": []
    },
    "358": {
      "block": "main_create_dispute_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "360": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "361": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "362": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "364": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "365": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "368": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.create_dispute",
      "op": "callsub create_dispute",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "371": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "0x151f7c75"
      ]
    },
    "372": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%23#0"
      ]
    },
    "373": {
      "op": "concat",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "374": {
      "op": "log",
      "stack_out": []
    },
    "375": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "376": {
      "op": "return",
      "stack_out": []
    },
    "377": {
      "block": "main_register_juror_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "379": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "380": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "381": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "383": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "384": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.register_juror",
      "op": "callsub register_juror",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "387": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "0x151f7c75"
      ]
    },
    "388": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%17#0"
      ]
    },
    "389": {
      "op": "concat",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "390": {
      "op": "log",
      "stack_out": []
    },
    "391": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "392": {
      "op": "return",
      "stack_out": []
    },
    "393": {
      "block": "main_set_insurance_contract_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "395": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "396": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "397": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "399": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "400": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "403": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.set_insurance_contract",
      "op": "callsub set_insurance_contract",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "406": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "0x151f7c75"
      ]
    },
    "407": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%11#0"
      ]
    },
    "408": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "409": {
      "op": "log",
      "stack_out": []
    },
    "410": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "411": {
      "op": "return",
      "stack_out": []
    },
    "412": {
      "block": "main_create_application_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "414": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "415": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "416": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "418": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "419": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "420": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "423": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.create_application",
      "op": "callsub create_application",
      "stack_out": []
    },
    "426": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "427": {
      "op": "return",
      "stack_out": []
    },
    "428": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.create_application",
      "params": {
        "admin#0": "bytes"
      },
      "block": "create_application",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "431": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "\"admin\""
      ]
    },
    "433": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin\"",
        "admin#0 (copy)"
      ],
      "stack_out": [
        "\"admin\"",
        "admin#0 (copy)"
      ]
    },
    "435": {
      "op": "app_global_put",
      "stack_out": []
    },
    "436": {
      "retsub": true,
      "op": "retsub"
    },
    "437": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.set_insurance_contract",
      "params": {
        "contract_address#0": "bytes"
      },
      "block": "set_insurance_contract",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "440": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "441": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"admin\""
      ]
    },
    "443": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "444": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "445": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "447": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "448": {
      "error": "Only admin",
      "op": "assert // Only admin",
      "stack_out": []
    },
    "449": {
      "op": "bytec 9 // \"insurance_contract\"",
      "defined_out": [
        "\"insurance_contract\""
      ],
      "stack_out": [
        "\"insurance_contract\""
      ]
    },
    "451": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"insurance_contract\"",
        "contract_address#0 (copy)"
      ],
      "stack_out": [
        "\"insurance_contract\"",
        "contract_address#0 (copy)"
      ]
    },
    "453": {
      "op": "app_global_put",
      "stack_out": []
    },
    "454": {
      "op": "bytec_3 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "0x0000000000000001"
      ]
    },
    "455": {
      "retsub": true,
      "op": "retsub"
    },
    "456": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.register_juror",
      "params": {},
      "block": "register_juror",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "459": {
      "op": "txn Sender"
    },
    "461": {
      "op": "bytec 6 // \"jurors\""
    },
    "463": {
      "op": "txn Sender",
      "defined_out": [
        "\"jurors\"",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "\"jurors\"",
        "caller#0"
      ]
    },
    "465": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0"
      ]
    },
    "466": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "467": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "existing_juror#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "existing_juror#0"
      ]
    },
    "468": {
      "op": "bury 1",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "existing_juror#0"
      ]
    },
    "470": {
      "op": "bz register_juror_after_if_else@2",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0"
      ]
    },
    "473": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "0x0000000000000000"
      ]
    },
    "474": {
      "op": "frame_bury 0"
    },
    "476": {
      "retsub": true,
      "op": "retsub"
    },
    "477": {
      "block": "register_juror_after_if_else@2",
      "stack_in": [
        "caller#0",
        "box_prefixed_key%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0"
      ]
    },
    "479": {
      "op": "pushbytes 0x0000000000000064",
      "defined_out": [
        "0x0000000000000064",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "0x0000000000000064"
      ]
    },
    "489": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "490": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "caller#0",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%2#0",
        "0x0000000000000000"
      ]
    },
    "491": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "492": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "encoded_tuple_buffer%3#0",
        "0x0000000000000000"
      ]
    },
    "493": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "juror_data#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "juror_data#0"
      ]
    },
    "494": {
      "op": "frame_dig 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "juror_data#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "juror_data#0",
        "box_prefixed_key%0#0"
      ]
    },
    "496": {
      "op": "swap",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "juror_data#0"
      ]
    },
    "497": {
      "op": "box_put",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0"
      ]
    },
    "498": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "499": {
      "op": "bytec_2 // \"total_jurors\"",
      "defined_out": [
        "\"total_jurors\"",
        "0",
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "0",
        "\"total_jurors\""
      ]
    },
    "500": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "501": {
      "error": "check self.total_jurors exists",
      "op": "assert // check self.total_jurors exists",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "maybe_value%1#0"
      ]
    },
    "502": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "caller#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "503": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "materialized_values%0#0"
      ]
    },
    "504": {
      "op": "bytec_2 // \"total_jurors\"",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "materialized_values%0#0",
        "\"total_jurors\""
      ]
    },
    "505": {
      "op": "swap",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "\"total_jurors\"",
        "materialized_values%0#0"
      ]
    },
    "506": {
      "op": "app_global_put",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0"
      ]
    },
    "507": {
      "op": "bytec_3 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "0x0000000000000001"
      ]
    },
    "508": {
      "op": "frame_bury 0"
    },
    "510": {
      "retsub": true,
      "op": "retsub"
    },
    "511": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.create_dispute",
      "params": {
        "policy_id#0": "bytes"
      },
      "block": "create_dispute",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "514": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "515": {
      "op": "dupn 2",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9"
      ]
    },
    "517": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0"
      ]
    },
    "519": {
      "op": "dupn 2",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0"
      ]
    },
    "521": {
      "op": "txn Sender"
    },
    "523": {
      "op": "bytec 6 // \"jurors\""
    },
    "525": {
      "op": "txn Sender",
      "defined_out": [
        "\"jurors\"",
        "caller#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "\"jurors\"",
        "caller#0"
      ]
    },
    "527": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "box_prefixed_key%0#0"
      ]
    },
    "528": {
      "op": "box_get",
      "defined_out": [
        "caller#0",
        "juror_exists#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "maybe_value%0#0",
        "juror_exists#0"
      ]
    },
    "529": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_exists#0"
      ]
    },
    "531": {
      "op": "bnz create_dispute_after_if_else@2",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ]
    },
    "534": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "caller#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "0x0000000000000000"
      ]
    },
    "535": {
      "op": "frame_bury 0"
    },
    "537": {
      "retsub": true,
      "op": "retsub"
    },
    "538": {
      "block": "create_dispute_after_if_else@2",
      "stack_in": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "0"
      ]
    },
    "539": {
      "op": "bytec 5 // \"next_dispute_id\"",
      "defined_out": [
        "\"next_dispute_id\"",
        "0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "0",
        "\"next_dispute_id\""
      ]
    },
    "541": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dispute_id#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "maybe_exists%1#0"
      ]
    },
    "542": {
      "error": "check self.next_dispute_id exists",
      "op": "assert // check self.next_dispute_id exists",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0"
      ]
    },
    "543": {
      "op": "dup",
      "defined_out": [
        "dispute_id#0",
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "dispute_id#0 (copy)"
      ]
    },
    "544": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "dispute_id#0",
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "dispute_id#0 (copy)",
        "1"
      ]
    },
    "545": {
      "op": "+",
      "defined_out": [
        "dispute_id#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "materialized_values%0#0"
      ]
    },
    "546": {
      "op": "bytec 5 // \"next_dispute_id\"",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "materialized_values%0#0",
        "\"next_dispute_id\""
      ]
    },
    "548": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "\"next_dispute_id\"",
        "materialized_values%0#0"
      ]
    },
    "549": {
      "op": "app_global_put",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0"
      ]
    },
    "550": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "dispute_id#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "to_encode%0#0"
      ]
    },
    "552": {
      "op": "itob",
      "defined_out": [
        "dispute_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%0#0"
      ]
    },
    "553": {
      "op": "frame_dig -1",
      "defined_out": [
        "dispute_id#0",
        "policy_id#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "policy_id#0 (copy)"
      ]
    },
    "555": {
      "op": "frame_dig 6",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "policy_id#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "policy_id#0 (copy)",
        "caller#0"
      ]
    },
    "557": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "558": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "559": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "560": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%3#0",
        "0x0000000000000000"
      ]
    },
    "561": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "562": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%4#0",
        "0x0000000000000000"
      ]
    },
    "563": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "564": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%5#0",
        "0x0000000000000000"
      ]
    },
    "565": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_data#0",
        "dispute_id#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_id#0",
        "dispute_data#0"
      ]
    },
    "566": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_data#0",
        "dispute_id#0"
      ]
    },
    "567": {
      "op": "itob",
      "defined_out": [
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ]
    },
    "568": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "569": {
      "op": "frame_bury 0",
      "defined_out": [
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ]
    },
    "571": {
      "op": "bytec 7 // \"disputes\"",
      "defined_out": [
        "\"disputes\"",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0",
        "\"disputes\""
      ]
    },
    "573": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_data#0",
        "\"disputes\"",
        "encoded_value%0#0"
      ]
    },
    "574": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "dispute_data#0",
        "box_prefixed_key%1#0"
      ]
    },
    "575": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "box_prefixed_key%1#0",
        "dispute_data#0"
      ]
    },
    "576": {
      "op": "box_put",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ]
    },
    "577": {
      "op": "pushbytes 0x",
      "defined_out": [
        "caller#0",
        "encoded_value%0#0",
        "selected_jurors#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "selected_jurors#0"
      ]
    },
    "579": {
      "op": "frame_bury 1",
      "defined_out": [
        "caller#0",
        "encoded_value%0#0",
        "selected_jurors#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ]
    },
    "581": {
      "op": "intc_1 // 0",
      "defined_out": [
        "caller#0",
        "encoded_value%0#0",
        "juror_count#0",
        "selected_jurors#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_count#0"
      ]
    },
    "582": {
      "op": "frame_bury 3",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ]
    },
    "584": {
      "op": "intc_0 // 1",
      "defined_out": [
        "caller#0",
        "encoded_value%0#0",
        "juror_count#0",
        "juror_index#0",
        "selected_jurors#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_index#0"
      ]
    },
    "585": {
      "op": "frame_bury 5",
      "defined_out": [
        "caller#0",
        "encoded_value%0#0",
        "juror_count#0",
        "juror_index#0",
        "selected_jurors#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ]
    },
    "587": {
      "block": "create_dispute_while_top@4",
      "stack_in": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "juror_count#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_count#0"
      ]
    },
    "589": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "juror_count#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_count#0",
        "10"
      ]
    },
    "591": {
      "op": "<",
      "defined_out": [
        "juror_count#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "tmp%0#0"
      ]
    },
    "592": {
      "op": "bz create_dispute_after_while@9",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ]
    },
    "595": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "juror_count#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "0"
      ]
    },
    "596": {
      "op": "bytec_2 // \"total_jurors\"",
      "defined_out": [
        "\"total_jurors\"",
        "0",
        "juror_count#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "0",
        "\"total_jurors\""
      ]
    },
    "597": {
      "op": "app_global_get_ex",
      "defined_out": [
        "juror_count#0",
        "maybe_exists%0#1",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "maybe_value%0#1",
        "maybe_exists%0#1"
      ]
    },
    "598": {
      "error": "check self.total_jurors exists",
      "op": "assert // check self.total_jurors exists",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "maybe_value%0#1"
      ]
    },
    "599": {
      "op": "frame_dig 5",
      "defined_out": [
        "juror_count#0",
        "juror_index#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "maybe_value%0#1",
        "juror_index#0"
      ]
    },
    "601": {
      "op": ">=",
      "defined_out": [
        "juror_count#0",
        "juror_index#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "tmp%1#0"
      ]
    },
    "602": {
      "op": "bz create_dispute_after_while@9",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ]
    },
    "605": {
      "op": "frame_dig 5",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_index#0"
      ]
    },
    "607": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "juror_count#0",
        "juror_index#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_index#0",
        "1"
      ]
    },
    "608": {
      "op": "+",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_index#0"
      ]
    },
    "609": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_index#0",
        "juror_index#0"
      ]
    },
    "610": {
      "op": "frame_bury 5",
      "defined_out": [
        "juror_count#0",
        "juror_index#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_index#0"
      ]
    },
    "612": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_index#0",
        "0"
      ]
    },
    "613": {
      "op": "bytec_2 // \"total_jurors\"",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_index#0",
        "0",
        "\"total_jurors\""
      ]
    },
    "614": {
      "op": "app_global_get_ex",
      "defined_out": [
        "juror_count#0",
        "juror_index#0",
        "maybe_exists%1#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_index#0",
        "maybe_value%1#1",
        "maybe_exists%1#0"
      ]
    },
    "615": {
      "error": "check self.total_jurors exists",
      "op": "assert // check self.total_jurors exists",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_index#0",
        "maybe_value%1#1"
      ]
    },
    "616": {
      "op": "<=",
      "defined_out": [
        "juror_count#0",
        "juror_index#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "tmp%2#0"
      ]
    },
    "617": {
      "op": "frame_dig 1",
      "defined_out": [
        "juror_count#0",
        "juror_index#0",
        "selected_jurors#9",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "tmp%2#0",
        "selected_jurors#9"
      ]
    },
    "619": {
      "op": "frame_bury 2",
      "defined_out": [
        "juror_count#0",
        "juror_index#0",
        "selected_jurors#9",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "tmp%2#0"
      ]
    },
    "621": {
      "op": "frame_dig 3",
      "defined_out": [
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "selected_jurors#9",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "tmp%2#0",
        "juror_count#9"
      ]
    },
    "623": {
      "op": "frame_bury 4",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "tmp%2#0"
      ]
    },
    "625": {
      "op": "bz create_dispute_after_if_else@8",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ]
    },
    "628": {
      "op": "frame_dig 3",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_count#0"
      ]
    },
    "630": {
      "op": "intc_0 // 1",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_count#0",
        "1"
      ]
    },
    "631": {
      "op": "+",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_count#0"
      ]
    },
    "632": {
      "op": "frame_dig 1",
      "defined_out": [
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "selected_jurors#0",
        "selected_jurors#9"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_count#0",
        "selected_jurors#0"
      ]
    },
    "634": {
      "op": "pushbytes 0x6a75726f72",
      "defined_out": [
        "0x6a75726f72",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "selected_jurors#0",
        "selected_jurors#9"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_count#0",
        "selected_jurors#0",
        "0x6a75726f72"
      ]
    },
    "641": {
      "op": "concat",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_count#0",
        "selected_jurors#9"
      ]
    },
    "642": {
      "op": "frame_bury 2",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_count#9"
      ]
    },
    "644": {
      "op": "frame_bury 4",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ]
    },
    "646": {
      "block": "create_dispute_after_if_else@8",
      "stack_in": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "selected_jurors#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "selected_jurors#0"
      ]
    },
    "648": {
      "op": "frame_bury 1",
      "defined_out": [
        "selected_jurors#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ]
    },
    "650": {
      "op": "frame_dig 4",
      "defined_out": [
        "juror_count#0",
        "selected_jurors#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "juror_count#0"
      ]
    },
    "652": {
      "op": "frame_bury 3",
      "defined_out": [
        "juror_count#0",
        "selected_jurors#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ]
    },
    "654": {
      "op": "b create_dispute_while_top@4"
    },
    "657": {
      "block": "create_dispute_after_while@9",
      "stack_in": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0"
      ],
      "op": "bytec 10 // \"dispute_jurors\"",
      "defined_out": [
        "\"dispute_jurors\""
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "\"dispute_jurors\""
      ]
    },
    "659": {
      "op": "frame_dig 0",
      "defined_out": [
        "\"dispute_jurors\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "\"dispute_jurors\"",
        "encoded_value%0#0"
      ]
    },
    "661": {
      "op": "dup",
      "defined_out": [
        "\"dispute_jurors\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "\"dispute_jurors\"",
        "encoded_value%0#0 (copy)",
        "encoded_value%0#0 (copy)"
      ]
    },
    "662": {
      "op": "cover 2",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "encoded_value%0#0",
        "\"dispute_jurors\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "664": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "665": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "666": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "667": {
      "op": "pop",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "668": {
      "op": "frame_dig 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "selected_jurors#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "selected_jurors#0"
      ]
    },
    "670": {
      "op": "box_put",
      "stack_out": [
        "encoded_value%0#0",
        "selected_jurors#0",
        "selected_jurors#9",
        "juror_count#0",
        "juror_count#9",
        "juror_index#0",
        "caller#0",
        "encoded_value%0#0"
      ]
    },
    "671": {
      "op": "frame_bury 0"
    },
    "673": {
      "retsub": true,
      "op": "retsub"
    },
    "674": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.vote_on_dispute",
      "params": {
        "dispute_id#0": "bytes",
        "vote#0": "bytes"
      },
      "block": "vote_on_dispute",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "677": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%2#0"
      ]
    },
    "678": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0"
      ]
    },
    "680": {
      "op": "txn Sender"
    },
    "682": {
      "op": "frame_dig -2",
      "defined_out": [
        "caller#0",
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "dispute_id#0 (copy)"
      ]
    },
    "684": {
      "op": "btoi",
      "defined_out": [
        "caller#0",
        "dispute_id_uint#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "dispute_id_uint#0"
      ]
    },
    "685": {
      "op": "itob",
      "defined_out": [
        "caller#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0"
      ]
    },
    "686": {
      "op": "dup",
      "defined_out": [
        "caller#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "687": {
      "op": "bytec 7 // \"disputes\"",
      "defined_out": [
        "\"disputes\"",
        "caller#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "encoded_value%0#0",
        "\"disputes\""
      ]
    },
    "689": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "\"disputes\"",
        "encoded_value%0#0"
      ]
    },
    "690": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "691": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "692": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "maybe_exists%0#0"
      ]
    },
    "693": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "694": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "695": {
      "op": "bytec 8 // base32(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)",
      "defined_out": [
        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
        "box_prefixed_key%0#0",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ]
    },
    "697": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%1#0"
      ]
    },
    "698": {
      "op": "bz vote_on_dispute_after_if_else@2",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "701": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "box_prefixed_key%0#0",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x0000000000000000"
      ]
    },
    "702": {
      "op": "frame_bury 0"
    },
    "704": {
      "retsub": true,
      "op": "retsub"
    },
    "705": {
      "block": "vote_on_dispute_after_if_else@2",
      "stack_in": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "bytec 10 // \"dispute_jurors\"",
      "defined_out": [
        "\"dispute_jurors\""
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "\"dispute_jurors\""
      ]
    },
    "707": {
      "op": "frame_dig 3",
      "defined_out": [
        "\"dispute_jurors\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "\"dispute_jurors\"",
        "encoded_value%0#0"
      ]
    },
    "709": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%1#0"
      ]
    },
    "710": {
      "op": "box_get",
      "defined_out": [
        "encoded_value%0#0",
        "juror_list#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_list#0",
        "maybe_exists%1#0"
      ]
    },
    "711": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_list#0"
      ]
    },
    "712": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "encoded_value%0#0",
        "juror_list#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_list#0",
        "0x"
      ]
    },
    "714": {
      "op": "==",
      "defined_out": [
        "encoded_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%2#0"
      ]
    },
    "715": {
      "op": "bz vote_on_dispute_after_if_else@4",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "718": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x0000000000000000"
      ]
    },
    "719": {
      "op": "frame_bury 0"
    },
    "721": {
      "retsub": true,
      "op": "retsub"
    },
    "722": {
      "block": "vote_on_dispute_after_if_else@4",
      "stack_in": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "pushbytes 0x766f7465",
      "defined_out": [
        "0x766f7465"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x766f7465"
      ]
    },
    "728": {
      "op": "frame_dig 2",
      "defined_out": [
        "0x766f7465",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x766f7465",
        "caller#0"
      ]
    },
    "730": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "vote_key#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "vote_key#0"
      ]
    },
    "731": {
      "op": "pushbytes \"juror_votes\"",
      "defined_out": [
        "\"juror_votes\"",
        "caller#0",
        "vote_key#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "vote_key#0",
        "\"juror_votes\""
      ]
    },
    "744": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "\"juror_votes\"",
        "vote_key#0"
      ]
    },
    "745": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%2#0"
      ]
    },
    "746": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0"
      ]
    },
    "747": {
      "op": "frame_bury 0",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%2#0"
      ]
    },
    "749": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0",
        "existing_vote#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "maybe_value%2#0",
        "existing_vote#0"
      ]
    },
    "750": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "existing_vote#0"
      ]
    },
    "752": {
      "op": "bz vote_on_dispute_after_if_else@6",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "755": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "box_prefixed_key%2#0",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x0000000000000000"
      ]
    },
    "756": {
      "op": "frame_bury 0"
    },
    "758": {
      "retsub": true,
      "op": "retsub"
    },
    "759": {
      "block": "vote_on_dispute_after_if_else@6",
      "stack_in": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "to_encode%0#0"
      ]
    },
    "761": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "val_as_bytes%0#0"
      ]
    },
    "762": {
      "op": "frame_dig 2",
      "defined_out": [
        "caller#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "val_as_bytes%0#0",
        "caller#0"
      ]
    },
    "764": {
      "op": "frame_dig -1",
      "defined_out": [
        "caller#0",
        "val_as_bytes%0#0",
        "vote#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "vote#0 (copy)"
      ]
    },
    "766": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "767": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%0#0"
      ]
    },
    "768": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "vote_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "vote_data#0"
      ]
    },
    "769": {
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0",
        "vote_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "vote_data#0",
        "box_prefixed_key%2#0"
      ]
    },
    "771": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%2#0",
        "vote_data#0"
      ]
    },
    "772": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "773": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "vote#0 (copy)"
      ]
    },
    "775": {
      "op": "bytec_3 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "box_prefixed_key%2#0",
        "caller#0",
        "vote#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "vote#0 (copy)",
        "0x0000000000000001"
      ]
    },
    "776": {
      "op": "b==",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%3#0"
      ]
    },
    "777": {
      "op": "bz vote_on_dispute_else_body@8",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "780": {
      "op": "frame_dig 5",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "782": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0",
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ]
    },
    "783": {
      "op": "intc_2 // 56",
      "defined_out": [
        "56",
        "box_prefixed_key%2#0",
        "caller#0",
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "dispute_data#0 (copy)",
        "56"
      ]
    },
    "784": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0",
        "dispute_data#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "tmp%5#0"
      ]
    },
    "785": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%2#0",
        "caller#0",
        "dispute_data#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "tmp%5#0",
        "1"
      ]
    },
    "786": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0",
        "dispute_data#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "to_encode%1#0"
      ]
    },
    "787": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0",
        "dispute_data#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "val_as_bytes%1#0"
      ]
    },
    "788": {
      "op": "replace2 56",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "790": {
      "op": "frame_bury 5",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "792": {
      "block": "vote_on_dispute_after_if_else@9",
      "stack_in": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%0#0"
      ]
    },
    "794": {
      "op": "frame_dig 5",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "796": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "dispute_data#0 (copy)",
        "dispute_data#0 (copy)"
      ]
    },
    "797": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "dispute_data#0 (copy)"
      ]
    },
    "799": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "800": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ]
    },
    "801": {
      "op": "intc_2 // 56",
      "defined_out": [
        "56",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "dispute_data#0 (copy)",
        "56"
      ]
    },
    "802": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "tmp%9#0"
      ]
    },
    "803": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ]
    },
    "804": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0",
        "dispute_data#0",
        "tmp%9#0"
      ]
    },
    "806": {
      "op": "frame_bury 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0",
        "dispute_data#0"
      ]
    },
    "808": {
      "op": "intc_3 // 64",
      "defined_out": [
        "64",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0",
        "dispute_data#0",
        "64"
      ]
    },
    "809": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "810": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0",
        "total_votes#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "total_votes#0"
      ]
    },
    "811": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0",
        "total_votes#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "total_votes#0",
        "7"
      ]
    },
    "813": {
      "op": ">=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%12#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%12#0"
      ]
    },
    "814": {
      "op": "bz vote_on_dispute_after_if_else@14",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "817": {
      "op": "frame_dig 1",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0"
      ]
    },
    "819": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0",
        "7"
      ]
    },
    "821": {
      "op": ">=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%15#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%15#0"
      ]
    },
    "822": {
      "op": "bz vote_on_dispute_else_body@12",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "825": {
      "op": "frame_dig 5",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "827": {
      "op": "bytec_3 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "0x0000000000000001"
      ]
    },
    "828": {
      "op": "replace2 48",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "830": {
      "op": "frame_bury 5",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "832": {
      "block": "vote_on_dispute_after_if_else@13",
      "stack_in": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%0#0"
      ]
    },
    "834": {
      "op": "frame_dig 5",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "836": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "837": {
      "block": "vote_on_dispute_after_if_else@14",
      "stack_in": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "bytec_3 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x0000000000000001"
      ]
    },
    "838": {
      "op": "frame_bury 0"
    },
    "840": {
      "retsub": true,
      "op": "retsub"
    },
    "841": {
      "block": "vote_on_dispute_else_body@12",
      "stack_in": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "843": {
      "op": "pushbytes 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "0x0000000000000002"
      ]
    },
    "853": {
      "op": "replace2 48",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "855": {
      "op": "frame_bury 5",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "857": {
      "op": "b vote_on_dispute_after_if_else@13"
    },
    "860": {
      "block": "vote_on_dispute_else_body@8",
      "stack_in": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "862": {
      "op": "dup",
      "defined_out": [
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ]
    },
    "863": {
      "op": "intc_3 // 64",
      "defined_out": [
        "64",
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "dispute_data#0 (copy)",
        "64"
      ]
    },
    "864": {
      "op": "extract_uint64",
      "defined_out": [
        "dispute_data#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "tmp%7#0"
      ]
    },
    "865": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "dispute_data#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "tmp%7#0",
        "1"
      ]
    },
    "866": {
      "op": "+",
      "defined_out": [
        "dispute_data#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "to_encode%2#0"
      ]
    },
    "867": {
      "op": "itob",
      "defined_out": [
        "dispute_data#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "val_as_bytes%2#0"
      ]
    },
    "868": {
      "op": "replace2 64",
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "870": {
      "op": "frame_bury 5",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "tmp%9#0",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "872": {
      "op": "b vote_on_dispute_after_if_else@9"
    },
    "875": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.get_dispute",
      "params": {
        "dispute_id#0": "bytes"
      },
      "block": "get_dispute",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "878": {
      "op": "frame_dig -1",
      "defined_out": [
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "dispute_id#0 (copy)"
      ]
    },
    "880": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "881": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "882": {
      "op": "bytec 7 // \"disputes\"",
      "defined_out": [
        "\"disputes\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"disputes\""
      ]
    },
    "884": {
      "op": "swap",
      "stack_out": [
        "\"disputes\"",
        "encoded_value%0#0"
      ]
    },
    "885": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "886": {
      "op": "box_get",
      "defined_out": [
        "dispute_data#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "maybe_exists%0#0"
      ]
    },
    "887": {
      "op": "pop",
      "stack_out": [
        "dispute_data#0"
      ]
    },
    "888": {
      "op": "dup",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "889": {
      "op": "bytec 8 // base32(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)",
      "defined_out": [
        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
        "dispute_data#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "dispute_data#0",
        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ]
    },
    "891": {
      "op": "==",
      "defined_out": [
        "dispute_data#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "tmp%1#0"
      ]
    },
    "892": {
      "op": "bz get_dispute_after_if_else@2",
      "stack_out": [
        "dispute_data#0"
      ]
    },
    "895": {
      "op": "bytec 8 // base32(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)",
      "stack_out": [
        "dispute_data#0",
        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ]
    },
    "897": {
      "op": "swap"
    },
    "898": {
      "retsub": true,
      "op": "retsub"
    },
    "899": {
      "block": "get_dispute_after_if_else@2",
      "stack_in": [
        "dispute_data#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "901": {
      "op": "swap"
    },
    "902": {
      "retsub": true,
      "op": "retsub"
    },
    "903": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.get_juror_info",
      "params": {
        "juror_address#0": "bytes"
      },
      "block": "get_juror_info",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "906": {
      "op": "bytec 6 // \"jurors\"",
      "defined_out": [
        "\"jurors\""
      ],
      "stack_out": [
        "\"jurors\""
      ]
    },
    "908": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"jurors\"",
        "juror_address#0 (copy)"
      ],
      "stack_out": [
        "\"jurors\"",
        "juror_address#0 (copy)"
      ]
    },
    "910": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "911": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "exists#0"
      ]
    },
    "912": {
      "op": "bnz get_juror_info_after_if_else@2",
      "stack_out": [
        "juror_data#0"
      ]
    },
    "915": {
      "op": "frame_dig -1",
      "stack_out": [
        "juror_data#0",
        "juror_address#0 (copy)"
      ]
    },
    "917": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "juror_address#0 (copy)",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "juror_address#0 (copy)",
        "0x0000000000000000"
      ]
    },
    "918": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "919": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%2#0",
        "0x0000000000000000"
      ]
    },
    "920": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "921": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%3#0",
        "0x0000000000000000"
      ]
    },
    "922": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "923": {
      "op": "swap"
    },
    "924": {
      "retsub": true,
      "op": "retsub"
    },
    "925": {
      "block": "get_juror_info_after_if_else@2",
      "stack_in": [
        "juror_data#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "juror_data#0"
      ]
    },
    "927": {
      "op": "swap"
    },
    "928": {
      "retsub": true,
      "op": "retsub"
    },
    "929": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.get_total_jurors",
      "params": {},
      "block": "get_total_jurors",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "930": {
      "op": "bytec_2 // \"total_jurors\"",
      "defined_out": [
        "\"total_jurors\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_jurors\""
      ]
    },
    "931": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "932": {
      "error": "check self.total_jurors exists",
      "op": "assert // check self.total_jurors exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "933": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "934": {
      "retsub": true,
      "op": "retsub"
    }
  }
}