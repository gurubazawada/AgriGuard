{
  "version": 3,
  "sources": [
    "../../dispute/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGQ;;AAAa;;AAAb;AACA;;AAA0B;;AAA1B;AACA;;AAAuB;AAAvB;AACA;AAAoB;AAApB;AACA;;AAA+B;AAA/B;AACA;;AAA8B;;;AAA9B;AACA;;AAAwB;;;;AAAxB;AAYA;;AAAqB;AAArB;AAjCR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAohBK;;AAAA;AAAA;AAAA;;AAAA;AAphBL;;;AAohBK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA3BA;;AAAA;AAAA;AAAA;;AAAA;AAzfL;;;AAyfK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AAjfL;;;AAAA;;;AAifK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAheL;;;AAgeK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AApBA;;AAAA;AAAA;AAAA;;AAAA;AA5cL;;;AA4cK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAlBA;;AAAA;AAAA;AAAA;;AAAA;AA5aL;;;AA4aK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAVA;;AAAA;AAAA;AAAA;;AAAA;AAlaL;;;AAkaK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AApBA;;AAAA;AAAA;AAAA;;AAAA;AA9YL;;;AA8YK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAjXL;;;AAiXK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAtBA;;AAAA;AAAA;AAAA;;AAAA;AA3VL;;;AA2VK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AArHA;;AAAA;AAAA;AAAA;;AAAA;AAtOL;;;AAAA;;;AAsOK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA/FA;;AAAA;AAAA;AAAA;;AAAA;AAvIL;;;AAuIK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAvCA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AAxFL;;;AAwFK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AArDA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAnCL;;;AAmCK;;;AAAA;;AAAL;;;AAGQ;;AAAA;;AAAA;AACA;;AAA+B;;AAA/B;AAUA;;AAPgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOhB;AAGgB;AAAhB;;AAAsC;;;;;;;;;;;;;;;;;;;;AAAgC;AAAtE;;;;AAER;;;AAOiC;;AAAX;AAJN;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAOO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAf;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACsB;AAAtB;AAAA;;AAAA;AAAA;;AAER;;;;AAGwB;;AAAA;AAAA;AAEb;;AAAU;;AAAV;AAAX;;;AACsD;;AAAA;AAAA;AAAA;AAAsC;AAAtC;AAAX;AAA/B;;AAAA;;AAaJ;;AAAA;;AAAA;;AAZK;;AAAU;;AAAV;AAAb;;;AACyD;;AAAA;AAAA;;AAAA;AAAyC;AAAzC;AAAX;AAAlC;;AAAA;;;;;AACC;;AAAU;;AAAV;AAAb;;;AACyD;;AAAA;AAAA;;AAAA;AAAyC;AAAzC;AAAX;AAAlC;;AAAA;;;;;AACC;;AAAU;;AAAV;AAAb;;;AAGa;;AAAU;;AAAV;AAAb;;;AACwD;;AAAA;AAAA;;AAAA;AAAwC;AAAxC;AAAX;AAAjC;;AAAA;;;;;AACC;;AAAU;;AAAV;;;;;AAAb;;;AACqD;;AAAA;AAAA;;AAAA;AAAqC;AAArC;AAAX;AAA9B;;;;;;;;;;;AAIZ;;;AAG6B;AAAA;;AAAA;AAAA;AAAd;;AAAA;AAAP;AAEA;;AAAA;;AAAA;AACO;AAAP;AAER;;;AAGoC;;AAGX;;AAHjB;;AAGiB;AAAA;AAAA;AAAA;;AACzB;;;AACmB;AAAP;;AAAA;AAGY;;AACQ;AAAA;;AAAA;AAAA;AAA+B;AAA/B;AAAjB;;AAAA;AAAP;AAQuB;AAEM;AAAA;;AAAA;AAAA;AAAX;AAPL;;AAAA;AAAA;;AAEE;;;;;;;;;;AAFF;AAGG;AAHH;AAIK;AAJL;AAAA;;AAAA;AAMO;AANP;AAAA;AAAA;AAUb;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAA;AAAA;AAAA;AAGmB;;AAAnB;;;AAGgB;AAAhB;;AAAuC;;;;;;;;;;;;;;;;;;;;AAAgC;AAAvE;;;AAGI;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAJ;AAEO;AAAP;;AAAA;AAER;;;;;;AAGoC;;AAGb;;AAHf;;AAGe;AAAA;AAAA;;AACZ;;;AACQ;AAAP;;AAAA;AAGY;;AACQ;AAAA;;AAAA;AAAA;AAA+B;AAA/B;AAAjB;;AAAA;AAAP;AAGa;AAAA;;AAAA;AAAA;AACb;AAAwB;AAAxB;AAAA;;AAAA;AAAA;AAMe;;AAAA;AAKgC;AAAA;;AAAA;AAAA;AAAhB;;AAAA;AAAX;AATL;;AAAA;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;AAKJ;AALI;AAMD;AANC;AAOF;AAPE;AAQC;AARD;AAAA;AAAA;AAUM;AAVN;AAGJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHI;AAaD;AAAA;AAAA;AAAA;;AAAd;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwBG;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAX;;;AAE0B;AAAd;;AACoB;AAAA;AAAA;AAAA;AAAd;;AAAA;AAAA;;;AACF;;AAAe;AAAf;AAAA;;;;;AA0BR;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAnCkB;;AAmClB;AAhDmB;;AAAnB;;;AAGA;AAAA;;AAAA;AAAA;;AAAgD;;;;;;;;;;;;;;;;;;;AAA+B;AAA/E;;;AAGI;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAJ;AAEA;;AAAA;AA4BkB;AAAd;;AACoD;AAAA;AAAA;AAAA;AAAd;;AAAA;AAAhC;;;AACF;;AAAe;AAAf;AAAA;;;;;AAoBhB;;;;;;AAGoC;;AAC5B;;AAAkB;AACF;;AAAhB;AAGmC;AAApB;;AAAA;AAAA;AAAA;AAAA;AAGZ;;;AACQ;AAAP;;AAAA;AAGe;;AAAA;;AAAA;AAAhB;;AAAA;AAAX;;;AACmB;AAAP;;AAAA;AAED;;AAAA;AAAA;AAAX;;;AACmB;AAAP;;AAAA;AAGS;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAGV;;;AACQ;AAAP;;AAAA;AAGJ;;AAAmC;;AAAf;AACN;;AAAA;AAAA;AAAA;AAAA;;AAEX;;;AACQ;AAAP;;AAAA;AAGqC;;AAAA;;AAAA;AAAzC;;AAAA;AAAyB;AACQ;AAA1B;AAAP;AAGW;;AAAX;;AAAW;AACK;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAExB;;;AACmB;AAAP;;AAAA;AAMU;;AAAA;AAAA;AAAA;;AAHF;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAOZ;;AAAA;AAAA;AAGG;;AAAA;AAAe;AAAf;AAAX;;;AACgD;;AAAA;AAAA;;AAAA;AAAgC;AAAhC;AAAX;AAAzB;;AAAA;;AAIkC;;AAAA;AAAA;;AAAA;AAAkC;AAAlC;AAAX;AAA3B;;AAAA;AAAA;;AACA;;AAAA;AAAA;;AAAA;;AAAA;AAGA;;AAAA;;AAAA;;AACoC;AAAA;;AAAA;AAAgC;AAAhC;AAAX;AAAzB;;AACA;;AAAA;AAAA;AAGc;;AAAA;AACI;;AAAf;AAAX;;;AACe;;AAAA;;AAAA;AAAiC;;AAAjC;AAAf;;;AACgB;;AAAsB;AAAtB;;AACA;;AAAA;;AAAA;;AACmB;;AAAnB;;;AAMJ;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAGsD;AAAA;AAA8B;AAA9B;AAAlC;;;AAAA;;;;;;;;;;;;;;;;;;;;AACpB;;AAAA;;AAAA;;AAAA;;AAAA;;;AAGG;AAAA;;AAAA;AAAA;AAAmC;;AAAnC;AAAf;;;AA0BY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AAtBQ;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAJ;AAGe;;AAAnB;;;AACA;;AAAA;;AAAoC;;;;;;;;;;;;;AAApC;;AAAA;;;AAEO;AAAP;;AAAA;AAduG;;;;;;;;;;;;;;;;;;;;;;;AAP/F;;AAAsB;;AAAtB;;AACA;;AAAA;;AAAA;;AACmB;;AAAnB;;;;;;AApB+B;;AAAA;AAAA;;AAAA;AAA+B;AAA/B;AAAX;AAAxB;;AAAA;;;;;AAyDZ;;;AAG2C;;AAAA;AAAA;AAApB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGZ;;;AAAiC;;AAAjC;AAAX;;;AACmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP;AAAA;AAaJ;;AAAA;AAAA;AAER;;;AAGqB;;AAAA;;AAAA;AAAA;AAGV;;;AACQ;;AAEQ;AAFR;AAGS;AAHT;AAIW;AAJX;AAKgB;AALhB;AAMa;AANb;AAOW;AAPX;AAAP;AAAA;AAUJ;;AAAA;AAAA;AAKkB;AAAA;AAAA;AAAA;AAAX;AAAP;AAKO;;AAAA;AAAA;AAAP;AAER;;;AAGqC;;AAAA;AAAA;AAArB;;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAT;AAAX;;;AAOmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAP;AAAA;AAOJ;;AAAA;AAAA;AAER;;;AAGuB;AAAA;;AAAA;AAAA;AAAqB;AAArB;AAAf;AAC0B;;AAAA;AAAf;AAA8B;AAA9B;AAAX;AACc;AAAX;AAAX;;;AACuB;AAAX;;AAEU;;AAAA;AAA0B;;AAAA;AAAjC;AAAP;;AAAA;AAER;;;AAG2C;;AAAA;AAAA;AAApB;;AAAA;AAAA;AAAA;AAGZ;;;AACQ;AAAP;AAAA;AAEY;;AAGG;;AAAA;;AAAA;AAAhB;AAAA;;;AAAwD;;AAAA;AAAA;AAAxD;;;AACQ;;AAAP;AAAA;AAGG;;AAAA;;;AAAP;AAAA;AAER;;;;;AAGuB;AACD;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAuB;AAAvB;AAGE;AAAP;;AAAA;;AAAA;AAAjB;;;AAC+C;;AAAA;AAApB;;AAAA;AAAA;AAAA;AAAA;AACZ;AAAA;;;;;AAAf;;;AACgB;;AAAgB;AAAhB;;;;;;;AAHC;;AAAA;AAAA;AAAA;;;;;AAKK;;AAAA;AAA0B;;AAAA;AAAjC;AAAP;;AAAA;AAER;;;AAGqB;;AAAA;;AAAA;AAAA;AAGV;;;AACQ;AAAP;AAAA;AAEY;;AAC4B;;AAAA;;AAAA;AAAhB;AAEG;AAA5B;AAAX;;;AACmB;AAAP;AAAA;AAED;;AAAA;;AAAA;AAA+B;AAA/B;AAAX;;;AACmB;;AAAP;AAAA;AAEG;;AAAP;AAAA;AAER;;;;AAG4B;;AAKQ;AAAA;;AAAA;AAAA;AAAH;AAAP;;AAAA;;AAAA;AAA1B;;;AACY;;AAAkC;;AAAd;AACN;;AAAA;AAAA;AAAA;AAAA;;;;;;AAE1B;;;AACgB;;AAAwC;;AAApB;;;;;;;AALV;;AAAA;AAAA;AAAA;;;;;AAOlB;;AAAA;;AAAA;AAER;;;AAGQ;;AAA0C;;;;;;;;;;;;;AAAtB;AACN;;AAAA;AAAA;AAAA;AAAA;;AAE2B;AAAlC;AAAA;;AAAA;AAAP;AAER;;;AAG6B;AAAA;;AAAA;AAAA;AAAd;;AAAA;AAAP;AAEA;;AAAkB;AACiB;AAApB;;AAAA;AAAA;AAAA;AAAA;AAGZ;;;AACQ;AAAP;;AAAA;AAGJ;;AAAsB;;AAAtB;;AACA;;AAAA;AAAA;;AAAA;AAAA;AAGmB;;AAAnB;;;AAG4B;AAAA;;AAAA;AAAA;AAA5B;;AAAA;AAAwC;;;;;;;;;;;;;;;;;;;;;AAAiC;AAAzE;;;AAGI;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AAEO;AAAP;;AAAA;AAER;;;AAGe;AAAA;;AAAA;AAAA;AAAmC;;AAAnC;AAAP;AAOI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AAEO;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 50 10"
    },
    "7": {
      "op": "bytecblock 0x0000000000000000 0x151f7c75 0x0000000000000001 \"total_jurors\" \"disputes\" \"admin\" \"next_dispute_id\" \"jurors\" \"insurance_contract\" \"contract_creation_round\" \"next_event_id\" \"stats_box\" \"juror_disputes\" 0x0000000000000003 \"voting_duration_rounds\" \"min_stake_amount\" \"event_log\" \"dispute_created\" \"dispute_resolved\" \"dispute_rejected\" \"dispute_processed\" \"vote_cast\" \"juror_registered\" 0x64697370757465 0x0000000000000002 0x61737369676e6564"
    },
    "345": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "347": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "350": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "\"admin\""
      ]
    },
    "352": {
      "op": "global ZeroAddress",
      "defined_out": [
        "\"admin\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"admin\"",
        "materialized_values%0#0"
      ]
    },
    "354": {
      "op": "app_global_put",
      "stack_out": []
    },
    "355": {
      "op": "bytec 8 // \"insurance_contract\"",
      "defined_out": [
        "\"insurance_contract\""
      ],
      "stack_out": [
        "\"insurance_contract\""
      ]
    },
    "357": {
      "op": "global ZeroAddress",
      "defined_out": [
        "\"insurance_contract\"",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "\"insurance_contract\"",
        "materialized_values%1#0"
      ]
    },
    "359": {
      "op": "app_global_put",
      "stack_out": []
    },
    "360": {
      "op": "bytec 6 // \"next_dispute_id\"",
      "defined_out": [
        "\"next_dispute_id\""
      ],
      "stack_out": [
        "\"next_dispute_id\""
      ]
    },
    "362": {
      "op": "intc_0 // 1",
      "defined_out": [
        "\"next_dispute_id\"",
        "1"
      ],
      "stack_out": [
        "\"next_dispute_id\"",
        "1"
      ]
    },
    "363": {
      "op": "app_global_put",
      "stack_out": []
    },
    "364": {
      "op": "bytec_3 // \"total_jurors\"",
      "defined_out": [
        "\"total_jurors\""
      ],
      "stack_out": [
        "\"total_jurors\""
      ]
    },
    "365": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"total_jurors\"",
        "0"
      ],
      "stack_out": [
        "\"total_jurors\"",
        "0"
      ]
    },
    "366": {
      "op": "app_global_put",
      "stack_out": []
    },
    "367": {
      "op": "bytec 9 // \"contract_creation_round\"",
      "defined_out": [
        "\"contract_creation_round\""
      ],
      "stack_out": [
        "\"contract_creation_round\""
      ]
    },
    "369": {
      "op": "intc_1 // 0",
      "stack_out": [
        "\"contract_creation_round\"",
        "0"
      ]
    },
    "370": {
      "op": "app_global_put",
      "stack_out": []
    },
    "371": {
      "op": "bytec 14 // \"voting_duration_rounds\"",
      "defined_out": [
        "\"voting_duration_rounds\""
      ],
      "stack_out": [
        "\"voting_duration_rounds\""
      ]
    },
    "373": {
      "op": "pushint 1000 // 1000",
      "defined_out": [
        "\"voting_duration_rounds\"",
        "1000"
      ],
      "stack_out": [
        "\"voting_duration_rounds\"",
        "1000"
      ]
    },
    "376": {
      "op": "app_global_put",
      "stack_out": []
    },
    "377": {
      "op": "bytec 15 // \"min_stake_amount\"",
      "defined_out": [
        "\"min_stake_amount\""
      ],
      "stack_out": [
        "\"min_stake_amount\""
      ]
    },
    "379": {
      "op": "pushint 1000000 // 1000000",
      "defined_out": [
        "\"min_stake_amount\"",
        "1000000"
      ],
      "stack_out": [
        "\"min_stake_amount\"",
        "1000000"
      ]
    },
    "383": {
      "op": "app_global_put",
      "stack_out": []
    },
    "384": {
      "op": "bytec 10 // \"next_event_id\"",
      "defined_out": [
        "\"next_event_id\""
      ],
      "stack_out": [
        "\"next_event_id\""
      ]
    },
    "386": {
      "op": "intc_0 // 1",
      "stack_out": [
        "\"next_event_id\"",
        "1"
      ]
    },
    "387": {
      "op": "app_global_put",
      "stack_out": []
    },
    "388": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "390": {
      "op": "bz main_after_if_else@23",
      "stack_out": []
    },
    "393": {
      "op": "pushbytess 0x894a716e 0x56f5e3fc 0xfcba023a 0x1335cdfd 0xb4a52d05 0xdd78b550 0xcc7887e3 0x7e273b38 0x140d1f47 0xbeab987b 0x615bb30f 0x3e0dd9fb 0xcc7b9e9b 0x442921b8 0xa9b42683 0x2b223a83 0x13c96720 0x9cbd0996 // method \"create_application(address)void\", method \"set_insurance_contract(address)uint64\", method \"register_juror()uint64\", method \"create_dispute(uint64)uint64\", method \"vote_on_dispute(uint64,uint64)uint64\", method \"get_dispute(uint64)(uint64,address,string,uint64,uint64,uint64,uint64,uint64,uint64,uint64)\", method \"get_juror_info(address)(address,uint64,uint64,uint64,uint64,uint64,uint64)\", method \"get_total_jurors()uint64\", method \"get_statistics()(uint64,uint64,uint64,uint64,uint64)\", method \"get_event(uint64)(uint64,string,address,uint64,uint64)\", method \"get_recent_events(uint64)(uint64,uint64)\", method \"get_dispute_status(uint64)uint64\", method \"get_active_disputes()(uint64,uint64)\", method \"validate_juror_eligibility(address)uint64\", method \"get_juror_assigned_disputes(address)byte[]\", method \"is_juror_assigned_to_dispute(address,uint64)uint64\", method \"mark_dispute_processed(uint64)uint64\", method \"trigger_policy_processing(uint64)uint64\"",
      "defined_out": [
        "Method(create_application(address)void)",
        "Method(create_dispute(uint64)uint64)",
        "Method(get_active_disputes()(uint64,uint64))",
        "Method(get_dispute(uint64)(uint64,address,string,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(get_dispute_status(uint64)uint64)",
        "Method(get_event(uint64)(uint64,string,address,uint64,uint64))",
        "Method(get_juror_assigned_disputes(address)byte[])",
        "Method(get_juror_info(address)(address,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(get_recent_events(uint64)(uint64,uint64))",
        "Method(get_statistics()(uint64,uint64,uint64,uint64,uint64))",
        "Method(get_total_jurors()uint64)",
        "Method(is_juror_assigned_to_dispute(address,uint64)uint64)",
        "Method(mark_dispute_processed(uint64)uint64)",
        "Method(register_juror()uint64)",
        "Method(set_insurance_contract(address)uint64)",
        "Method(trigger_policy_processing(uint64)uint64)",
        "Method(validate_juror_eligibility(address)uint64)",
        "Method(vote_on_dispute(uint64,uint64)uint64)"
      ],
      "stack_out": [
        "Method(create_application(address)void)",
        "Method(set_insurance_contract(address)uint64)",
        "Method(register_juror()uint64)",
        "Method(create_dispute(uint64)uint64)",
        "Method(vote_on_dispute(uint64,uint64)uint64)",
        "Method(get_dispute(uint64)(uint64,address,string,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(get_juror_info(address)(address,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(get_total_jurors()uint64)",
        "Method(get_statistics()(uint64,uint64,uint64,uint64,uint64))",
        "Method(get_event(uint64)(uint64,string,address,uint64,uint64))",
        "Method(get_recent_events(uint64)(uint64,uint64))",
        "Method(get_dispute_status(uint64)uint64)",
        "Method(get_active_disputes()(uint64,uint64))",
        "Method(validate_juror_eligibility(address)uint64)",
        "Method(get_juror_assigned_disputes(address)byte[])",
        "Method(is_juror_assigned_to_dispute(address,uint64)uint64)",
        "Method(mark_dispute_processed(uint64)uint64)",
        "Method(trigger_policy_processing(uint64)uint64)"
      ]
    },
    "485": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create_application(address)void)",
        "Method(create_dispute(uint64)uint64)",
        "Method(get_active_disputes()(uint64,uint64))",
        "Method(get_dispute(uint64)(uint64,address,string,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(get_dispute_status(uint64)uint64)",
        "Method(get_event(uint64)(uint64,string,address,uint64,uint64))",
        "Method(get_juror_assigned_disputes(address)byte[])",
        "Method(get_juror_info(address)(address,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(get_recent_events(uint64)(uint64,uint64))",
        "Method(get_statistics()(uint64,uint64,uint64,uint64,uint64))",
        "Method(get_total_jurors()uint64)",
        "Method(is_juror_assigned_to_dispute(address,uint64)uint64)",
        "Method(mark_dispute_processed(uint64)uint64)",
        "Method(register_juror()uint64)",
        "Method(set_insurance_contract(address)uint64)",
        "Method(trigger_policy_processing(uint64)uint64)",
        "Method(validate_juror_eligibility(address)uint64)",
        "Method(vote_on_dispute(uint64,uint64)uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(create_application(address)void)",
        "Method(set_insurance_contract(address)uint64)",
        "Method(register_juror()uint64)",
        "Method(create_dispute(uint64)uint64)",
        "Method(vote_on_dispute(uint64,uint64)uint64)",
        "Method(get_dispute(uint64)(uint64,address,string,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(get_juror_info(address)(address,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(get_total_jurors()uint64)",
        "Method(get_statistics()(uint64,uint64,uint64,uint64,uint64))",
        "Method(get_event(uint64)(uint64,string,address,uint64,uint64))",
        "Method(get_recent_events(uint64)(uint64,uint64))",
        "Method(get_dispute_status(uint64)uint64)",
        "Method(get_active_disputes()(uint64,uint64))",
        "Method(validate_juror_eligibility(address)uint64)",
        "Method(get_juror_assigned_disputes(address)byte[])",
        "Method(is_juror_assigned_to_dispute(address,uint64)uint64)",
        "Method(mark_dispute_processed(uint64)uint64)",
        "Method(trigger_policy_processing(uint64)uint64)",
        "tmp%2#0"
      ]
    },
    "488": {
      "op": "match main_create_application_route@5 main_set_insurance_contract_route@6 main_register_juror_route@7 main_create_dispute_route@8 main_vote_on_dispute_route@9 main_get_dispute_route@10 main_get_juror_info_route@11 main_get_total_jurors_route@12 main_get_statistics_route@13 main_get_event_route@14 main_get_recent_events_route@15 main_get_dispute_status_route@16 main_get_active_disputes_route@17 main_validate_juror_eligibility_route@18 main_get_juror_assigned_disputes_route@19 main_is_juror_assigned_to_dispute_route@20 main_mark_dispute_processed_route@21 main_trigger_policy_processing_route@22",
      "stack_out": []
    },
    "526": {
      "block": "main_after_if_else@23",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "527": {
      "op": "return",
      "stack_out": []
    },
    "528": {
      "block": "main_trigger_policy_processing_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "530": {
      "op": "!",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "531": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "532": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "534": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "535": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "538": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.trigger_policy_processing",
      "op": "callsub trigger_policy_processing",
      "defined_out": [
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%106#0"
      ]
    },
    "541": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%106#0",
        "0x151f7c75"
      ]
    },
    "542": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%106#0"
      ]
    },
    "543": {
      "op": "concat",
      "defined_out": [
        "tmp%107#0"
      ],
      "stack_out": [
        "tmp%107#0"
      ]
    },
    "544": {
      "op": "log",
      "stack_out": []
    },
    "545": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "546": {
      "op": "return",
      "stack_out": []
    },
    "547": {
      "block": "main_mark_dispute_processed_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "549": {
      "op": "!",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "550": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "551": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "553": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "554": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "557": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.mark_dispute_processed",
      "op": "callsub mark_dispute_processed",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "560": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0",
        "0x151f7c75"
      ]
    },
    "561": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%100#0"
      ]
    },
    "562": {
      "op": "concat",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "563": {
      "op": "log",
      "stack_out": []
    },
    "564": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "565": {
      "op": "return",
      "stack_out": []
    },
    "566": {
      "block": "main_is_juror_assigned_to_dispute_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "568": {
      "op": "!",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "569": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "570": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "572": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "573": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%5#0"
      ]
    },
    "576": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%5#0",
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%5#0",
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "579": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.is_juror_assigned_to_dispute",
      "op": "callsub is_juror_assigned_to_dispute",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "582": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0",
        "0x151f7c75"
      ]
    },
    "583": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%94#0"
      ]
    },
    "584": {
      "op": "concat",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "585": {
      "op": "log",
      "stack_out": []
    },
    "586": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "587": {
      "op": "return",
      "stack_out": []
    },
    "588": {
      "block": "main_get_juror_assigned_disputes_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "590": {
      "op": "!",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "591": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "592": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "594": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "595": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%4#0"
      ]
    },
    "598": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.get_juror_assigned_disputes",
      "op": "callsub get_juror_assigned_disputes",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "601": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "602": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "603": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "604": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "607": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "608": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "609": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "610": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "611": {
      "op": "concat",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "612": {
      "op": "log",
      "stack_out": []
    },
    "613": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "614": {
      "op": "return",
      "stack_out": []
    },
    "615": {
      "block": "main_validate_juror_eligibility_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "617": {
      "op": "!",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "618": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "619": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "621": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "622": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%3#0"
      ]
    },
    "625": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.validate_juror_eligibility",
      "op": "callsub validate_juror_eligibility",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "628": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0",
        "0x151f7c75"
      ]
    },
    "629": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%83#0"
      ]
    },
    "630": {
      "op": "concat",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "631": {
      "op": "log",
      "stack_out": []
    },
    "632": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "633": {
      "op": "return",
      "stack_out": []
    },
    "634": {
      "block": "main_get_active_disputes_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "636": {
      "op": "!",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "637": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "638": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "640": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "641": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.get_active_disputes",
      "op": "callsub get_active_disputes",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "644": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0",
        "0x151f7c75"
      ]
    },
    "645": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%77#0"
      ]
    },
    "646": {
      "op": "concat",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "647": {
      "op": "log",
      "stack_out": []
    },
    "648": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "649": {
      "op": "return",
      "stack_out": []
    },
    "650": {
      "block": "main_get_dispute_status_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "652": {
      "op": "!",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "653": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "654": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "656": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "657": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "660": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.get_dispute_status",
      "op": "callsub get_dispute_status",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "663": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "0x151f7c75"
      ]
    },
    "664": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%71#0"
      ]
    },
    "665": {
      "op": "concat",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "666": {
      "op": "log",
      "stack_out": []
    },
    "667": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "668": {
      "op": "return",
      "stack_out": []
    },
    "669": {
      "block": "main_get_recent_events_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "671": {
      "op": "!",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "672": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "673": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "675": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "676": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "679": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.get_recent_events",
      "op": "callsub get_recent_events",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "682": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "0x151f7c75"
      ]
    },
    "683": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%65#0"
      ]
    },
    "684": {
      "op": "concat",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "685": {
      "op": "log",
      "stack_out": []
    },
    "686": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "687": {
      "op": "return",
      "stack_out": []
    },
    "688": {
      "block": "main_get_event_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "690": {
      "op": "!",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "691": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "692": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "694": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "695": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "698": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.get_event",
      "op": "callsub get_event",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "701": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0",
        "0x151f7c75"
      ]
    },
    "702": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%59#0"
      ]
    },
    "703": {
      "op": "concat",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "704": {
      "op": "log",
      "stack_out": []
    },
    "705": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "706": {
      "op": "return",
      "stack_out": []
    },
    "707": {
      "block": "main_get_statistics_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "709": {
      "op": "!",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "710": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "711": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "713": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "714": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.get_statistics",
      "op": "callsub get_statistics",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "717": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "0x151f7c75"
      ]
    },
    "718": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%53#0"
      ]
    },
    "719": {
      "op": "concat",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "720": {
      "op": "log",
      "stack_out": []
    },
    "721": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "722": {
      "op": "return",
      "stack_out": []
    },
    "723": {
      "block": "main_get_total_jurors_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "725": {
      "op": "!",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "726": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "727": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "729": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "730": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.get_total_jurors",
      "op": "callsub get_total_jurors",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "733": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "0x151f7c75"
      ]
    },
    "734": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%47#0"
      ]
    },
    "735": {
      "op": "concat",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "736": {
      "op": "log",
      "stack_out": []
    },
    "737": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "738": {
      "op": "return",
      "stack_out": []
    },
    "739": {
      "block": "main_get_juror_info_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "741": {
      "op": "!",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "742": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "743": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "745": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "746": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "749": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.get_juror_info",
      "op": "callsub get_juror_info",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "752": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "0x151f7c75"
      ]
    },
    "753": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%41#0"
      ]
    },
    "754": {
      "op": "concat",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "755": {
      "op": "log",
      "stack_out": []
    },
    "756": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "757": {
      "op": "return",
      "stack_out": []
    },
    "758": {
      "block": "main_get_dispute_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "760": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "761": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "762": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "764": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "765": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "768": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.get_dispute",
      "op": "callsub get_dispute",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "771": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "0x151f7c75"
      ]
    },
    "772": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%35#0"
      ]
    },
    "773": {
      "op": "concat",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "774": {
      "op": "log",
      "stack_out": []
    },
    "775": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "776": {
      "op": "return",
      "stack_out": []
    },
    "777": {
      "block": "main_vote_on_dispute_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "779": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "780": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "781": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "783": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "784": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "787": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "790": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.vote_on_dispute",
      "op": "callsub vote_on_dispute",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "793": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "0x151f7c75"
      ]
    },
    "794": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%29#0"
      ]
    },
    "795": {
      "op": "concat",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "796": {
      "op": "log",
      "stack_out": []
    },
    "797": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "798": {
      "op": "return",
      "stack_out": []
    },
    "799": {
      "block": "main_create_dispute_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "801": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "802": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "803": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "805": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "806": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "809": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.create_dispute",
      "op": "callsub create_dispute",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "812": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "0x151f7c75"
      ]
    },
    "813": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%23#0"
      ]
    },
    "814": {
      "op": "concat",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "815": {
      "op": "log",
      "stack_out": []
    },
    "816": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "817": {
      "op": "return",
      "stack_out": []
    },
    "818": {
      "block": "main_register_juror_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "820": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "821": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "822": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "824": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "825": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.register_juror",
      "op": "callsub register_juror",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "828": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "0x151f7c75"
      ]
    },
    "829": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%17#0"
      ]
    },
    "830": {
      "op": "concat",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "831": {
      "op": "log",
      "stack_out": []
    },
    "832": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "833": {
      "op": "return",
      "stack_out": []
    },
    "834": {
      "block": "main_set_insurance_contract_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "836": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "837": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "838": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "840": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "841": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "844": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.set_insurance_contract",
      "op": "callsub set_insurance_contract",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "847": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "0x151f7c75"
      ]
    },
    "848": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%11#0"
      ]
    },
    "849": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "850": {
      "op": "log",
      "stack_out": []
    },
    "851": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "852": {
      "op": "return",
      "stack_out": []
    },
    "853": {
      "block": "main_create_application_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "855": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "856": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "857": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "859": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "860": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "861": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "864": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute.create_application",
      "op": "callsub create_application",
      "stack_out": []
    },
    "867": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "868": {
      "op": "return",
      "stack_out": []
    },
    "869": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.create_application",
      "params": {
        "admin#0": "bytes"
      },
      "block": "create_application",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "872": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "\"admin\""
      ]
    },
    "874": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin\"",
        "admin#0 (copy)"
      ],
      "stack_out": [
        "\"admin\"",
        "admin#0 (copy)"
      ]
    },
    "876": {
      "op": "app_global_put",
      "stack_out": []
    },
    "877": {
      "op": "bytec 9 // \"contract_creation_round\"",
      "defined_out": [
        "\"contract_creation_round\""
      ],
      "stack_out": [
        "\"contract_creation_round\""
      ]
    },
    "879": {
      "op": "global Round",
      "defined_out": [
        "\"contract_creation_round\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"contract_creation_round\"",
        "materialized_values%0#0"
      ]
    },
    "881": {
      "op": "app_global_put",
      "stack_out": []
    },
    "882": {
      "op": "bytec 11 // \"stats_box\"",
      "defined_out": [
        "\"stats_box\""
      ],
      "stack_out": [
        "\"stats_box\""
      ]
    },
    "884": {
      "op": "pushbytes 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "\"stats_box\"",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ],
      "stack_out": [
        "\"stats_box\"",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "926": {
      "op": "box_put",
      "stack_out": []
    },
    "927": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000"
      ],
      "stack_out": [
        "0x0000000000000000"
      ]
    },
    "928": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x0000000000000000",
        "admin#0 (copy)"
      ]
    },
    "930": {
      "op": "pushbytes 0x0010636f6e74726163745f63726561746564",
      "defined_out": [
        "0x0000000000000000",
        "0x0010636f6e74726163745f63726561746564",
        "admin#0 (copy)"
      ],
      "stack_out": [
        "0x0000000000000000",
        "admin#0 (copy)",
        "0x0010636f6e74726163745f63726561746564"
      ]
    },
    "950": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "0x0000000000000000",
        "admin#0 (copy)",
        "0x0010636f6e74726163745f63726561746564",
        "0x0000000000000000"
      ]
    },
    "951": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute._log_event",
      "op": "callsub _log_event",
      "stack_out": []
    },
    "954": {
      "retsub": true,
      "op": "retsub"
    },
    "955": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute._log_event",
      "params": {
        "dispute_id#0": "bytes",
        "juror#0": "bytes",
        "action#0": "bytes",
        "vote_value#0": "bytes"
      },
      "block": "_log_event",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "958": {
      "op": "global Round",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "960": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "961": {
      "op": "frame_dig -4",
      "defined_out": [
        "dispute_id#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "dispute_id#0 (copy)"
      ]
    },
    "963": {
      "op": "pushbytes 0x003a",
      "defined_out": [
        "0x003a",
        "dispute_id#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "dispute_id#0 (copy)",
        "0x003a"
      ]
    },
    "967": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "968": {
      "op": "frame_dig -3",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "juror#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0",
        "juror#0 (copy)"
      ]
    },
    "970": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "971": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "972": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "973": {
      "op": "frame_dig -1",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "vote_value#0 (copy)"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "vote_value#0 (copy)"
      ]
    },
    "975": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%5#0"
      ]
    },
    "976": {
      "op": "frame_dig -2",
      "defined_out": [
        "action#0 (copy)",
        "encoded_tuple_buffer%5#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%5#0",
        "action#0 (copy)"
      ]
    },
    "978": {
      "op": "concat",
      "defined_out": [
        "event#0"
      ],
      "stack_out": [
        "event#0"
      ]
    },
    "979": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "event#0"
      ],
      "stack_out": [
        "event#0",
        "0"
      ]
    },
    "980": {
      "op": "bytec 10 // \"next_event_id\"",
      "defined_out": [
        "\"next_event_id\"",
        "0",
        "event#0"
      ],
      "stack_out": [
        "event#0",
        "0",
        "\"next_event_id\""
      ]
    },
    "982": {
      "op": "app_global_get_ex",
      "defined_out": [
        "event#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "event#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "983": {
      "error": "check self.next_event_id exists",
      "op": "assert // check self.next_event_id exists",
      "stack_out": [
        "event#0",
        "maybe_value%0#0"
      ]
    },
    "984": {
      "op": "dup",
      "defined_out": [
        "event#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "event#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "985": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "event#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "event#0",
        "maybe_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "986": {
      "op": "bytec 16 // \"event_log\"",
      "defined_out": [
        "\"event_log\"",
        "encoded_value%0#0",
        "event#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "event#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "\"event_log\""
      ]
    },
    "988": {
      "op": "swap",
      "stack_out": [
        "event#0",
        "maybe_value%0#0",
        "\"event_log\"",
        "encoded_value%0#0"
      ]
    },
    "989": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "event#0",
        "maybe_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "990": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "event#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "event#0",
        "maybe_value%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "991": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "maybe_value%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "event#0",
        "maybe_value%0#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "992": {
      "op": "pop",
      "stack_out": [
        "event#0",
        "maybe_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "993": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "box_prefixed_key%0#0",
        "event#0"
      ]
    },
    "995": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "996": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "997": {
      "op": "+",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "998": {
      "op": "bytec 10 // \"next_event_id\"",
      "stack_out": [
        "materialized_values%0#0",
        "\"next_event_id\""
      ]
    },
    "1000": {
      "op": "swap",
      "stack_out": [
        "\"next_event_id\"",
        "materialized_values%0#0"
      ]
    },
    "1001": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1002": {
      "retsub": true,
      "op": "retsub"
    },
    "1003": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute._update_stats",
      "params": {
        "action#0": "bytes"
      },
      "block": "_update_stats",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1006": {
      "op": "intc_1 // 0",
      "stack_out": [
        "current_stats#14"
      ]
    },
    "1007": {
      "op": "bytec 11 // \"stats_box\"",
      "defined_out": [
        "\"stats_box\""
      ],
      "stack_out": [
        "current_stats#14",
        "\"stats_box\""
      ]
    },
    "1009": {
      "op": "box_get",
      "defined_out": [
        "current_stats#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "maybe_exists%0#0"
      ]
    },
    "1010": {
      "error": "check self.stats_box exists",
      "op": "assert // check self.stats_box exists",
      "stack_out": [
        "current_stats#14",
        "current_stats#0"
      ]
    },
    "1011": {
      "op": "frame_dig -1",
      "defined_out": [
        "action#0 (copy)",
        "current_stats#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "action#0 (copy)"
      ]
    },
    "1013": {
      "op": "bytec 17 // \"dispute_created\"",
      "defined_out": [
        "\"dispute_created\"",
        "action#0 (copy)",
        "current_stats#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "action#0 (copy)",
        "\"dispute_created\""
      ]
    },
    "1015": {
      "op": "==",
      "defined_out": [
        "current_stats#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "tmp%0#0"
      ]
    },
    "1016": {
      "op": "bz _update_stats_else_body@2",
      "stack_out": [
        "current_stats#14",
        "current_stats#0"
      ]
    },
    "1019": {
      "op": "frame_dig 1",
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0"
      ]
    },
    "1021": {
      "op": "dup",
      "defined_out": [
        "current_stats#0",
        "current_stats#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "current_stats#0 (copy)"
      ]
    },
    "1022": {
      "op": "intc_1 // 0",
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "current_stats#0 (copy)",
        "0"
      ]
    },
    "1023": {
      "op": "extract_uint64",
      "defined_out": [
        "current_stats#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "tmp%2#0"
      ]
    },
    "1024": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "current_stats#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "tmp%2#0",
        "1"
      ]
    },
    "1025": {
      "op": "+",
      "defined_out": [
        "current_stats#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "to_encode%0#0"
      ]
    },
    "1026": {
      "op": "itob",
      "defined_out": [
        "current_stats#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "val_as_bytes%0#0"
      ]
    },
    "1027": {
      "op": "replace2 0",
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0"
      ]
    },
    "1029": {
      "op": "frame_bury 1",
      "stack_out": [
        "current_stats#14",
        "current_stats#0"
      ]
    },
    "1031": {
      "block": "_update_stats_after_if_else@17",
      "stack_in": [
        "current_stats#14",
        "current_stats#0"
      ],
      "op": "bytec 11 // \"stats_box\"",
      "defined_out": [
        "\"stats_box\""
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "\"stats_box\""
      ]
    },
    "1033": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"stats_box\"",
        "current_stats#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "\"stats_box\"",
        "current_stats#0"
      ]
    },
    "1035": {
      "op": "box_put",
      "stack_out": [
        "current_stats#14",
        "current_stats#0"
      ]
    },
    "1036": {
      "retsub": true,
      "op": "retsub"
    },
    "1037": {
      "block": "_update_stats_else_body@2",
      "stack_in": [
        "current_stats#14",
        "current_stats#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "action#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "action#0 (copy)"
      ]
    },
    "1039": {
      "op": "bytec 18 // \"dispute_resolved\"",
      "defined_out": [
        "\"dispute_resolved\"",
        "action#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "action#0 (copy)",
        "\"dispute_resolved\""
      ]
    },
    "1041": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "tmp%3#0"
      ]
    },
    "1042": {
      "op": "bz _update_stats_else_body@4",
      "stack_out": [
        "current_stats#14",
        "current_stats#0"
      ]
    },
    "1045": {
      "op": "frame_dig 1",
      "defined_out": [
        "current_stats#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0"
      ]
    },
    "1047": {
      "op": "dup",
      "defined_out": [
        "current_stats#0",
        "current_stats#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "current_stats#0 (copy)"
      ]
    },
    "1048": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "current_stats#0",
        "current_stats#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "current_stats#0 (copy)",
        "8"
      ]
    },
    "1050": {
      "op": "extract_uint64",
      "defined_out": [
        "current_stats#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "tmp%5#0"
      ]
    },
    "1051": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "current_stats#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "tmp%5#0",
        "1"
      ]
    },
    "1052": {
      "op": "+",
      "defined_out": [
        "current_stats#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "to_encode%1#0"
      ]
    },
    "1053": {
      "op": "itob",
      "defined_out": [
        "current_stats#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "val_as_bytes%1#0"
      ]
    },
    "1054": {
      "op": "replace2 8",
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0"
      ]
    },
    "1056": {
      "op": "frame_bury 1",
      "defined_out": [
        "current_stats#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0"
      ]
    },
    "1058": {
      "op": "b _update_stats_after_if_else@17"
    },
    "1061": {
      "block": "_update_stats_else_body@4",
      "stack_in": [
        "current_stats#14",
        "current_stats#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "action#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "action#0 (copy)"
      ]
    },
    "1063": {
      "op": "bytec 19 // \"dispute_rejected\"",
      "defined_out": [
        "\"dispute_rejected\"",
        "action#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "action#0 (copy)",
        "\"dispute_rejected\""
      ]
    },
    "1065": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "tmp%6#0"
      ]
    },
    "1066": {
      "op": "bz _update_stats_else_body@6",
      "stack_out": [
        "current_stats#14",
        "current_stats#0"
      ]
    },
    "1069": {
      "op": "frame_dig 1",
      "defined_out": [
        "current_stats#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0"
      ]
    },
    "1071": {
      "op": "dup",
      "defined_out": [
        "current_stats#0",
        "current_stats#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "current_stats#0 (copy)"
      ]
    },
    "1072": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "current_stats#0",
        "current_stats#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "current_stats#0 (copy)",
        "16"
      ]
    },
    "1074": {
      "op": "extract_uint64",
      "defined_out": [
        "current_stats#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "tmp%8#0"
      ]
    },
    "1075": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "current_stats#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "tmp%8#0",
        "1"
      ]
    },
    "1076": {
      "op": "+",
      "defined_out": [
        "current_stats#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "to_encode%2#0"
      ]
    },
    "1077": {
      "op": "itob",
      "defined_out": [
        "current_stats#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "val_as_bytes%2#0"
      ]
    },
    "1078": {
      "op": "replace2 16",
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0"
      ]
    },
    "1080": {
      "op": "frame_bury 1",
      "defined_out": [
        "current_stats#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0"
      ]
    },
    "1082": {
      "op": "b _update_stats_after_if_else@17"
    },
    "1085": {
      "block": "_update_stats_else_body@6",
      "stack_in": [
        "current_stats#14",
        "current_stats#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "action#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "action#0 (copy)"
      ]
    },
    "1087": {
      "op": "bytec 20 // \"dispute_processed\"",
      "defined_out": [
        "\"dispute_processed\"",
        "action#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "action#0 (copy)",
        "\"dispute_processed\""
      ]
    },
    "1089": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "tmp%9#0"
      ]
    },
    "1090": {
      "op": "bnz _update_stats_after_if_else@17",
      "stack_out": [
        "current_stats#14",
        "current_stats#0"
      ]
    },
    "1093": {
      "op": "frame_dig -1",
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "action#0 (copy)"
      ]
    },
    "1095": {
      "op": "bytec 21 // \"vote_cast\"",
      "defined_out": [
        "\"vote_cast\"",
        "action#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "action#0 (copy)",
        "\"vote_cast\""
      ]
    },
    "1097": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "tmp%10#0"
      ]
    },
    "1098": {
      "op": "bz _update_stats_else_body@10",
      "stack_out": [
        "current_stats#14",
        "current_stats#0"
      ]
    },
    "1101": {
      "op": "frame_dig 1",
      "defined_out": [
        "current_stats#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0"
      ]
    },
    "1103": {
      "op": "dup",
      "defined_out": [
        "current_stats#0",
        "current_stats#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "current_stats#0 (copy)"
      ]
    },
    "1104": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "current_stats#0",
        "current_stats#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "current_stats#0 (copy)",
        "24"
      ]
    },
    "1106": {
      "op": "extract_uint64",
      "defined_out": [
        "current_stats#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "tmp%12#0"
      ]
    },
    "1107": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "current_stats#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "tmp%12#0",
        "1"
      ]
    },
    "1108": {
      "op": "+",
      "defined_out": [
        "current_stats#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "to_encode%3#0"
      ]
    },
    "1109": {
      "op": "itob",
      "defined_out": [
        "current_stats#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "val_as_bytes%3#0"
      ]
    },
    "1110": {
      "op": "replace2 24",
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0"
      ]
    },
    "1112": {
      "op": "frame_bury 1",
      "defined_out": [
        "current_stats#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0"
      ]
    },
    "1114": {
      "op": "b _update_stats_after_if_else@17"
    },
    "1117": {
      "block": "_update_stats_else_body@10",
      "stack_in": [
        "current_stats#14",
        "current_stats#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "action#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "action#0 (copy)"
      ]
    },
    "1119": {
      "op": "bytec 22 // \"juror_registered\"",
      "defined_out": [
        "\"juror_registered\"",
        "action#0 (copy)"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "action#0 (copy)",
        "\"juror_registered\""
      ]
    },
    "1121": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "tmp%13#0"
      ]
    },
    "1122": {
      "op": "frame_dig 1",
      "defined_out": [
        "current_stats#14",
        "tmp%13#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "tmp%13#0",
        "current_stats#14"
      ]
    },
    "1124": {
      "op": "frame_bury 0",
      "defined_out": [
        "current_stats#14",
        "tmp%13#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "tmp%13#0"
      ]
    },
    "1126": {
      "op": "bz _update_stats_after_if_else@12",
      "stack_out": [
        "current_stats#14",
        "current_stats#0"
      ]
    },
    "1129": {
      "op": "frame_dig 1",
      "defined_out": [
        "current_stats#0",
        "current_stats#14"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0"
      ]
    },
    "1131": {
      "op": "dup",
      "defined_out": [
        "current_stats#0",
        "current_stats#0 (copy)",
        "current_stats#14"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "current_stats#0 (copy)"
      ]
    },
    "1132": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "current_stats#0",
        "current_stats#0 (copy)",
        "current_stats#14"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "current_stats#0 (copy)",
        "32"
      ]
    },
    "1134": {
      "op": "extract_uint64",
      "defined_out": [
        "current_stats#0",
        "current_stats#14",
        "tmp%15#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "tmp%15#0"
      ]
    },
    "1135": {
      "op": "intc_0 // 1",
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "tmp%15#0",
        "1"
      ]
    },
    "1136": {
      "op": "+",
      "defined_out": [
        "current_stats#0",
        "current_stats#14",
        "to_encode%4#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "to_encode%4#0"
      ]
    },
    "1137": {
      "op": "itob",
      "defined_out": [
        "current_stats#0",
        "current_stats#14",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0",
        "val_as_bytes%4#0"
      ]
    },
    "1138": {
      "op": "replace2 32",
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#14"
      ]
    },
    "1140": {
      "op": "frame_bury 0",
      "stack_out": [
        "current_stats#14",
        "current_stats#0"
      ]
    },
    "1142": {
      "block": "_update_stats_after_if_else@12",
      "stack_in": [
        "current_stats#14",
        "current_stats#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "current_stats#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0",
        "current_stats#0"
      ]
    },
    "1144": {
      "op": "frame_bury 1",
      "defined_out": [
        "current_stats#0"
      ],
      "stack_out": [
        "current_stats#14",
        "current_stats#0"
      ]
    },
    "1146": {
      "op": "b _update_stats_after_if_else@17"
    },
    "1149": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.set_insurance_contract",
      "params": {
        "contract_address#0": "bytes"
      },
      "block": "set_insurance_contract",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1152": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1153": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"admin\""
      ]
    },
    "1155": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1156": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1157": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "1159": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1160": {
      "error": "Only admin",
      "op": "assert // Only admin",
      "stack_out": []
    },
    "1161": {
      "op": "bytec 8 // \"insurance_contract\"",
      "defined_out": [
        "\"insurance_contract\""
      ],
      "stack_out": [
        "\"insurance_contract\""
      ]
    },
    "1163": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"insurance_contract\"",
        "contract_address#0 (copy)"
      ],
      "stack_out": [
        "\"insurance_contract\"",
        "contract_address#0 (copy)"
      ]
    },
    "1165": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1166": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "0x0000000000000001"
      ]
    },
    "1167": {
      "retsub": true,
      "op": "retsub"
    },
    "1168": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.register_juror",
      "params": {},
      "block": "register_juror",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1171": {
      "op": "txn Sender"
    },
    "1173": {
      "op": "bytec 7 // \"jurors\""
    },
    "1175": {
      "op": "txn Sender",
      "defined_out": [
        "\"jurors\"",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "\"jurors\"",
        "caller#0"
      ]
    },
    "1177": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1178": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1179": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "existing_juror#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "maybe_value%0#0",
        "existing_juror#0"
      ]
    },
    "1180": {
      "op": "bury 1",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "existing_juror#0"
      ]
    },
    "1182": {
      "op": "bz register_juror_after_if_else@2",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1185": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "0x0000000000000000"
      ]
    },
    "1186": {
      "op": "frame_bury 0"
    },
    "1188": {
      "retsub": true,
      "op": "retsub"
    },
    "1189": {
      "block": "register_juror_after_if_else@2",
      "stack_in": [
        "caller#0",
        "box_prefixed_key%0#0"
      ],
      "op": "global Round",
      "defined_out": [
        "current_round#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "current_round#0"
      ]
    },
    "1191": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "current_round#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "current_round#0",
        "0"
      ]
    },
    "1192": {
      "op": "bytec 9 // \"contract_creation_round\"",
      "defined_out": [
        "\"contract_creation_round\"",
        "0",
        "current_round#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "current_round#0",
        "0",
        "\"contract_creation_round\""
      ]
    },
    "1194": {
      "op": "app_global_get_ex",
      "defined_out": [
        "current_round#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "current_round#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1195": {
      "error": "check self.contract_creation_round exists",
      "op": "assert // check self.contract_creation_round exists",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "current_round#0",
        "maybe_value%1#0"
      ]
    },
    "1196": {
      "op": "intc_3 // 10",
      "defined_out": [
        "10",
        "current_round#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "current_round#0",
        "maybe_value%1#0",
        "10"
      ]
    },
    "1197": {
      "op": "+",
      "defined_out": [
        "current_round#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "current_round#0",
        "tmp%0#0"
      ]
    },
    "1198": {
      "op": "dig 1",
      "defined_out": [
        "current_round#0",
        "current_round#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "current_round#0",
        "tmp%0#0",
        "current_round#0 (copy)"
      ]
    },
    "1200": {
      "op": "<=",
      "defined_out": [
        "current_round#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "current_round#0",
        "tmp%1#0"
      ]
    },
    "1201": {
      "error": "Contract initialization period not complete",
      "op": "assert // Contract initialization period not complete",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "current_round#0"
      ]
    },
    "1202": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1203": {
      "op": "intc_1 // 0",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "1204": {
      "op": "bytec 15 // \"min_stake_amount\"",
      "defined_out": [
        "\"min_stake_amount\"",
        "0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "val_as_bytes%0#0",
        "0",
        "\"min_stake_amount\""
      ]
    },
    "1206": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1207": {
      "error": "check self.min_stake_amount exists",
      "op": "assert // check self.min_stake_amount exists",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0"
      ]
    },
    "1208": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1209": {
      "op": "frame_dig 0",
      "defined_out": [
        "caller#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "caller#0"
      ]
    },
    "1211": {
      "op": "dup",
      "defined_out": [
        "caller#0",
        "caller#0 (copy)",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "caller#0 (copy)",
        "caller#0 (copy)"
      ]
    },
    "1212": {
      "op": "cover 3",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "caller#0 (copy)"
      ]
    },
    "1214": {
      "op": "pushbytes 0x0000000000000064",
      "defined_out": [
        "0x0000000000000064",
        "caller#0",
        "caller#0 (copy)",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "caller#0 (copy)",
        "0x0000000000000064"
      ]
    },
    "1224": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1225": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "caller#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0",
        "0x0000000000000000"
      ]
    },
    "1226": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1227": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%3#0",
        "0x0000000000000000"
      ]
    },
    "1228": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1229": {
      "op": "uncover 2",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "1231": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1232": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0",
        "0x0000000000000000"
      ]
    },
    "1233": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1234": {
      "op": "swap",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%1#0"
      ]
    },
    "1235": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "juror_data#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "juror_data#0"
      ]
    },
    "1236": {
      "op": "frame_dig 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "juror_data#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "juror_data#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1238": {
      "op": "swap",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "box_prefixed_key%0#0",
        "juror_data#0"
      ]
    },
    "1239": {
      "op": "box_put",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0"
      ]
    },
    "1240": {
      "op": "intc_1 // 0",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "0"
      ]
    },
    "1241": {
      "op": "bytec_3 // \"total_jurors\"",
      "defined_out": [
        "\"total_jurors\"",
        "0",
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "0",
        "\"total_jurors\""
      ]
    },
    "1242": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1243": {
      "error": "check self.total_jurors exists",
      "op": "assert // check self.total_jurors exists",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "maybe_value%3#0"
      ]
    },
    "1244": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "caller#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "1245": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "materialized_values%0#0"
      ]
    },
    "1246": {
      "op": "bytec_3 // \"total_jurors\"",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "materialized_values%0#0",
        "\"total_jurors\""
      ]
    },
    "1247": {
      "op": "swap",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "\"total_jurors\"",
        "materialized_values%0#0"
      ]
    },
    "1248": {
      "op": "app_global_put",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0"
      ]
    },
    "1249": {
      "op": "bytec 22 // \"juror_registered\"",
      "defined_out": [
        "\"juror_registered\"",
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "\"juror_registered\""
      ]
    },
    "1251": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute._update_stats",
      "op": "callsub _update_stats",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0"
      ]
    },
    "1254": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "0x0000000000000000"
      ]
    },
    "1255": {
      "op": "dig 1",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "0x0000000000000000",
        "caller#0 (copy)"
      ]
    },
    "1257": {
      "op": "pushbytes 0x00106a75726f725f72656769737465726564",
      "defined_out": [
        "0x0000000000000000",
        "0x00106a75726f725f72656769737465726564",
        "box_prefixed_key%0#0",
        "caller#0",
        "caller#0 (copy)"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "0x0000000000000000",
        "caller#0 (copy)",
        "0x00106a75726f725f72656769737465726564"
      ]
    },
    "1277": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "0x0000000000000000",
        "caller#0 (copy)",
        "0x00106a75726f725f72656769737465726564",
        "0x0000000000000000"
      ]
    },
    "1278": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute._log_event",
      "op": "callsub _log_event",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0"
      ]
    },
    "1281": {
      "op": "pushbytes 0x4a55524f525f52454749535445524544",
      "defined_out": [
        "0x4a55524f525f52454749535445524544",
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "caller#0",
        "0x4a55524f525f52454749535445524544"
      ]
    },
    "1299": {
      "op": "swap",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "0x4a55524f525f52454749535445524544",
        "caller#0"
      ]
    },
    "1300": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "1301": {
      "op": "log",
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1302": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "caller#0",
        "box_prefixed_key%0#0",
        "0x0000000000000001"
      ]
    },
    "1303": {
      "op": "frame_bury 0"
    },
    "1305": {
      "retsub": true,
      "op": "retsub"
    },
    "1306": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.create_dispute",
      "params": {
        "policy_id#0": "bytes"
      },
      "block": "create_dispute",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1309": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1310": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1"
      ]
    },
    "1312": {
      "op": "txn Sender"
    },
    "1314": {
      "op": "bytec 7 // \"jurors\""
    },
    "1316": {
      "op": "txn Sender",
      "defined_out": [
        "\"jurors\"",
        "caller#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "\"jurors\"",
        "caller#0"
      ]
    },
    "1318": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1319": {
      "op": "box_get",
      "defined_out": [
        "caller#0",
        "juror_exists#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "maybe_value%0#0",
        "juror_exists#0"
      ]
    },
    "1320": {
      "op": "bury 1",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "juror_exists#0"
      ]
    },
    "1322": {
      "op": "bnz create_dispute_after_if_else@2",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0"
      ]
    },
    "1325": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "caller#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "0x0000000000000000"
      ]
    },
    "1326": {
      "op": "frame_bury 0"
    },
    "1328": {
      "retsub": true,
      "op": "retsub"
    },
    "1329": {
      "block": "create_dispute_after_if_else@2",
      "stack_in": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0"
      ],
      "op": "global Round",
      "defined_out": [
        "current_round#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0"
      ]
    },
    "1331": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "current_round#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "0"
      ]
    },
    "1332": {
      "op": "bytec 9 // \"contract_creation_round\"",
      "defined_out": [
        "\"contract_creation_round\"",
        "0",
        "current_round#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "0",
        "\"contract_creation_round\""
      ]
    },
    "1334": {
      "op": "app_global_get_ex",
      "defined_out": [
        "current_round#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1335": {
      "error": "check self.contract_creation_round exists",
      "op": "assert // check self.contract_creation_round exists",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "maybe_value%1#0"
      ]
    },
    "1336": {
      "op": "intc_2 // 50",
      "defined_out": [
        "50",
        "current_round#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "maybe_value%1#0",
        "50"
      ]
    },
    "1337": {
      "op": "+",
      "defined_out": [
        "current_round#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "tmp%0#0"
      ]
    },
    "1338": {
      "op": "dig 1",
      "defined_out": [
        "current_round#0",
        "current_round#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "tmp%0#0",
        "current_round#0 (copy)"
      ]
    },
    "1340": {
      "op": "<=",
      "defined_out": [
        "current_round#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "tmp%1#0"
      ]
    },
    "1341": {
      "error": "Contract not fully operational yet",
      "op": "assert // Contract not fully operational yet",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0"
      ]
    },
    "1342": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "0"
      ]
    },
    "1343": {
      "op": "bytec 6 // \"next_dispute_id\"",
      "defined_out": [
        "\"next_dispute_id\"",
        "0",
        "current_round#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "0",
        "\"next_dispute_id\""
      ]
    },
    "1345": {
      "op": "app_global_get_ex",
      "defined_out": [
        "current_round#0",
        "dispute_id#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "dispute_id#0",
        "maybe_exists%2#0"
      ]
    },
    "1346": {
      "error": "check self.next_dispute_id exists",
      "op": "assert // check self.next_dispute_id exists",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "dispute_id#0"
      ]
    },
    "1347": {
      "op": "dup",
      "defined_out": [
        "current_round#0",
        "dispute_id#0",
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "dispute_id#0",
        "dispute_id#0 (copy)"
      ]
    },
    "1348": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "current_round#0",
        "dispute_id#0",
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "dispute_id#0",
        "dispute_id#0 (copy)",
        "1"
      ]
    },
    "1349": {
      "op": "+",
      "defined_out": [
        "current_round#0",
        "dispute_id#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "dispute_id#0",
        "materialized_values%0#0"
      ]
    },
    "1350": {
      "op": "bytec 6 // \"next_dispute_id\"",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "dispute_id#0",
        "materialized_values%0#0",
        "\"next_dispute_id\""
      ]
    },
    "1352": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "dispute_id#0",
        "\"next_dispute_id\"",
        "materialized_values%0#0"
      ]
    },
    "1353": {
      "op": "app_global_put",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "dispute_id#0"
      ]
    },
    "1354": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "dispute_id#0",
        "current_round#0 (copy)"
      ]
    },
    "1356": {
      "op": "itob",
      "defined_out": [
        "current_round#0",
        "dispute_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "dispute_id#0",
        "val_as_bytes%0#0"
      ]
    },
    "1357": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "1358": {
      "op": "bytec 14 // \"voting_duration_rounds\"",
      "defined_out": [
        "\"voting_duration_rounds\"",
        "0",
        "current_round#0",
        "dispute_id#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "0",
        "\"voting_duration_rounds\""
      ]
    },
    "1360": {
      "op": "app_global_get_ex",
      "defined_out": [
        "current_round#0",
        "dispute_id#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1361": {
      "error": "check self.voting_duration_rounds exists",
      "op": "assert // check self.voting_duration_rounds exists",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "current_round#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "maybe_value%4#0"
      ]
    },
    "1362": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "maybe_value%4#0",
        "current_round#0"
      ]
    },
    "1364": {
      "op": "+",
      "defined_out": [
        "dispute_id#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "to_encode%0#0"
      ]
    },
    "1365": {
      "op": "itob",
      "defined_out": [
        "dispute_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1366": {
      "op": "frame_dig -1",
      "defined_out": [
        "dispute_id#0",
        "policy_id#0 (copy)",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "policy_id#0 (copy)"
      ]
    },
    "1368": {
      "op": "frame_dig 2",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "policy_id#0 (copy)",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "policy_id#0 (copy)",
        "caller#0"
      ]
    },
    "1370": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1371": {
      "op": "pushbytes 0x0062",
      "defined_out": [
        "0x0062",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0",
        "0x0062"
      ]
    },
    "1375": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1376": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "1378": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1379": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%4#0",
        "0x0000000000000000"
      ]
    },
    "1380": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1381": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0",
        "0x0000000000000000"
      ]
    },
    "1382": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1383": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "0x0000000000000000"
      ]
    },
    "1384": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1385": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0",
        "0x0000000000000000"
      ]
    },
    "1386": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1387": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%1#0"
      ]
    },
    "1388": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%9#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "1389": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%9#0",
        "0x0000000000000000"
      ]
    },
    "1390": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "1391": {
      "op": "pushbytes 0x0019506f6c69637920736574746c656d656e742064697370757465",
      "defined_out": [
        "0x0019506f6c69637920736574746c656d656e742064697370757465",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "encoded_tuple_buffer%10#0",
        "0x0019506f6c69637920736574746c656d656e742064697370757465"
      ]
    },
    "1420": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "dispute_data#0",
        "dispute_id#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_id#0",
        "dispute_data#0"
      ]
    },
    "1421": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_data#0",
        "dispute_id#0"
      ]
    },
    "1422": {
      "op": "itob",
      "defined_out": [
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ]
    },
    "1423": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "1424": {
      "op": "frame_bury 0",
      "defined_out": [
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ]
    },
    "1426": {
      "op": "bytec 4 // \"disputes\"",
      "defined_out": [
        "\"disputes\"",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0",
        "\"disputes\""
      ]
    },
    "1428": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_data#0",
        "\"disputes\"",
        "encoded_value%0#0"
      ]
    },
    "1429": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_data#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1430": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_data#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)"
      ]
    },
    "1431": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%1#0",
        "caller#0",
        "dispute_data#0",
        "encoded_value%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_data#0",
        "box_prefixed_key%1#0",
        "{box_del}"
      ]
    },
    "1432": {
      "op": "pop",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "dispute_data#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1433": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "box_prefixed_key%1#0",
        "dispute_data#0"
      ]
    },
    "1434": {
      "op": "box_put",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0"
      ]
    },
    "1435": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "0"
      ]
    },
    "1436": {
      "op": "bytec_3 // \"total_jurors\"",
      "defined_out": [
        "\"total_jurors\"",
        "0",
        "caller#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "0",
        "\"total_jurors\""
      ]
    },
    "1437": {
      "op": "app_global_get_ex",
      "defined_out": [
        "caller#0",
        "encoded_value%0#0",
        "maybe_exists%0#1",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "maybe_value%0#1",
        "maybe_exists%0#1"
      ]
    },
    "1438": {
      "error": "check self.total_jurors exists",
      "op": "assert // check self.total_jurors exists",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "maybe_value%0#1"
      ]
    },
    "1439": {
      "op": "intc_3 // 10",
      "defined_out": [
        "10",
        "caller#0",
        "encoded_value%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "maybe_value%0#1",
        "10"
      ]
    },
    "1440": {
      "op": "<=",
      "defined_out": [
        "caller#0",
        "encoded_value%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "tmp%0#1"
      ]
    },
    "1441": {
      "op": "bz create_dispute_else_body@11",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0"
      ]
    },
    "1444": {
      "op": "intc_1 // 0",
      "defined_out": [
        "caller#0",
        "encoded_value%0#0",
        "juror_index#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "juror_index#1"
      ]
    },
    "1445": {
      "op": "frame_bury 1",
      "defined_out": [
        "caller#0",
        "encoded_value%0#0",
        "juror_index#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0"
      ]
    },
    "1447": {
      "block": "create_dispute_while_top@5",
      "stack_in": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "0"
      ]
    },
    "1448": {
      "op": "bytec_3 // \"total_jurors\"",
      "defined_out": [
        "\"total_jurors\"",
        "0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "0",
        "\"total_jurors\""
      ]
    },
    "1449": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1450": {
      "error": "check self.total_jurors exists",
      "op": "assert // check self.total_jurors exists",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "maybe_value%1#0"
      ]
    },
    "1451": {
      "op": "frame_dig 1",
      "defined_out": [
        "juror_index#1",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "maybe_value%1#0",
        "juror_index#1"
      ]
    },
    "1453": {
      "op": ">",
      "defined_out": [
        "juror_index#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "tmp%1#0"
      ]
    },
    "1454": {
      "op": "bz create_dispute_after_if_else@18",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0"
      ]
    },
    "1457": {
      "op": "frame_dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "juror_index#1"
      ]
    },
    "1459": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "juror_index#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "juror_index#1",
        "1"
      ]
    },
    "1460": {
      "op": "+",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "juror_index#1"
      ]
    },
    "1461": {
      "op": "frame_bury 1",
      "defined_out": [
        "juror_index#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0"
      ]
    },
    "1463": {
      "op": "b create_dispute_while_top@5"
    },
    "1466": {
      "block": "create_dispute_after_if_else@18",
      "stack_in": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0"
      ],
      "op": "pushbytes \"dispute_jurors\"",
      "defined_out": [
        "\"dispute_jurors\""
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "\"dispute_jurors\""
      ]
    },
    "1482": {
      "op": "frame_dig 0",
      "defined_out": [
        "\"dispute_jurors\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "\"dispute_jurors\"",
        "encoded_value%0#0"
      ]
    },
    "1484": {
      "op": "dup",
      "defined_out": [
        "\"dispute_jurors\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "\"dispute_jurors\"",
        "encoded_value%0#0 (copy)",
        "encoded_value%0#0 (copy)"
      ]
    },
    "1485": {
      "op": "cover 2",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "\"dispute_jurors\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "1487": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%2#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%2#0"
      ]
    },
    "1488": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)"
      ]
    },
    "1489": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%2#0",
        "encoded_value%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%2#0",
        "{box_del}"
      ]
    },
    "1490": {
      "op": "pop",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%2#0"
      ]
    },
    "1491": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "box_prefixed_key%2#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "box_prefixed_key%2#0",
        "0x"
      ]
    },
    "1493": {
      "op": "box_put",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0"
      ]
    },
    "1494": {
      "op": "bytec 17 // \"dispute_created\"",
      "defined_out": [
        "\"dispute_created\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "\"dispute_created\""
      ]
    },
    "1496": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute._update_stats",
      "op": "callsub _update_stats",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0"
      ]
    },
    "1499": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ]
    },
    "1500": {
      "op": "frame_dig 2",
      "defined_out": [
        "caller#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "caller#0"
      ]
    },
    "1502": {
      "op": "dup",
      "defined_out": [
        "caller#0",
        "caller#0 (copy)",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "caller#0 (copy)",
        "caller#0 (copy)"
      ]
    },
    "1503": {
      "op": "cover 2",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "caller#0",
        "encoded_value%0#0 (copy)",
        "caller#0 (copy)"
      ]
    },
    "1505": {
      "op": "pushbytes 0x000f646973707574655f63726561746564",
      "defined_out": [
        "0x000f646973707574655f63726561746564",
        "caller#0",
        "caller#0 (copy)",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "caller#0",
        "encoded_value%0#0 (copy)",
        "caller#0 (copy)",
        "0x000f646973707574655f63726561746564"
      ]
    },
    "1524": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "0x000f646973707574655f63726561746564",
        "caller#0",
        "caller#0 (copy)",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "caller#0",
        "encoded_value%0#0 (copy)",
        "caller#0 (copy)",
        "0x000f646973707574655f63726561746564",
        "0x0000000000000000"
      ]
    },
    "1525": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute._log_event",
      "op": "callsub _log_event",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "caller#0"
      ]
    },
    "1528": {
      "op": "pushbytes 0x444953505554455f43524541544544646973707574655f69643a",
      "defined_out": [
        "0x444953505554455f43524541544544646973707574655f69643a",
        "caller#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "caller#0",
        "0x444953505554455f43524541544544646973707574655f69643a"
      ]
    },
    "1556": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "0x444953505554455f43524541544544646973707574655f69643a",
        "caller#0"
      ]
    },
    "1557": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "encoded_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0",
        "tmp%3#0"
      ]
    },
    "1558": {
      "op": "log",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "encoded_value%0#0"
      ]
    },
    "1559": {
      "op": "frame_bury 0"
    },
    "1561": {
      "retsub": true,
      "op": "retsub"
    },
    "1562": {
      "block": "create_dispute_else_body@11",
      "stack_in": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "juror_index#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "juror_index#1"
      ]
    },
    "1563": {
      "op": "frame_bury 1",
      "defined_out": [
        "juror_index#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0"
      ]
    },
    "1565": {
      "block": "create_dispute_while_top@12",
      "stack_in": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "0"
      ]
    },
    "1566": {
      "op": "bytec_3 // \"total_jurors\"",
      "defined_out": [
        "\"total_jurors\"",
        "0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "0",
        "\"total_jurors\""
      ]
    },
    "1567": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "maybe_value%2#1",
        "maybe_exists%2#0"
      ]
    },
    "1568": {
      "error": "check self.total_jurors exists",
      "op": "assert // check self.total_jurors exists",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "maybe_value%2#1"
      ]
    },
    "1569": {
      "op": "frame_dig 1",
      "defined_out": [
        "juror_index#1",
        "maybe_value%2#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "maybe_value%2#1",
        "juror_index#1"
      ]
    },
    "1571": {
      "op": ">",
      "defined_out": [
        "juror_index#1",
        "tmp%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "tmp%5#0"
      ]
    },
    "1572": {
      "op": "bz create_dispute_after_if_else@18",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0"
      ]
    },
    "1575": {
      "op": "frame_dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "juror_index#1"
      ]
    },
    "1577": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "juror_index#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "juror_index#1",
        "1"
      ]
    },
    "1578": {
      "op": "+",
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0",
        "juror_index#1"
      ]
    },
    "1579": {
      "op": "frame_bury 1",
      "defined_out": [
        "juror_index#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "juror_index#1",
        "caller#0"
      ]
    },
    "1581": {
      "op": "b create_dispute_while_top@12"
    },
    "1584": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.vote_on_dispute",
      "params": {
        "dispute_id#0": "bytes",
        "vote#0": "bytes"
      },
      "block": "vote_on_dispute",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1587": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%2#0"
      ]
    },
    "1588": {
      "op": "dupn 3",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0"
      ]
    },
    "1590": {
      "op": "txn Sender"
    },
    "1592": {
      "op": "frame_dig -2",
      "defined_out": [
        "caller#0",
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "dispute_id#0 (copy)"
      ]
    },
    "1594": {
      "op": "btoi",
      "defined_out": [
        "caller#0",
        "dispute_id_uint#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "dispute_id_uint#0"
      ]
    },
    "1595": {
      "op": "global Round",
      "defined_out": [
        "caller#0",
        "current_round#0",
        "dispute_id_uint#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "dispute_id_uint#0",
        "current_round#0"
      ]
    },
    "1597": {
      "op": "swap",
      "defined_out": [
        "caller#0",
        "current_round#0",
        "dispute_id_uint#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "dispute_id_uint#0"
      ]
    },
    "1598": {
      "op": "itob",
      "defined_out": [
        "caller#0",
        "current_round#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "encoded_value%0#0"
      ]
    },
    "1599": {
      "op": "bytec 4 // \"disputes\"",
      "defined_out": [
        "\"disputes\"",
        "caller#0",
        "current_round#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "encoded_value%0#0",
        "\"disputes\""
      ]
    },
    "1601": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "\"disputes\"",
        "encoded_value%0#0"
      ]
    },
    "1602": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "current_round#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1603": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "current_round#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1604": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "caller#0",
        "current_round#0",
        "dispute_data#0",
        "dispute_exists#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_exists#0"
      ]
    },
    "1605": {
      "op": "bnz vote_on_dispute_after_if_else@2",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1608": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "box_prefixed_key%0#0",
        "caller#0",
        "current_round#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x0000000000000000"
      ]
    },
    "1609": {
      "op": "frame_bury 0"
    },
    "1611": {
      "retsub": true,
      "op": "retsub"
    },
    "1612": {
      "block": "vote_on_dispute_after_if_else@2",
      "stack_in": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1614": {
      "op": "pushint 82 // 82",
      "defined_out": [
        "82",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "82"
      ]
    },
    "1616": {
      "op": "extract_uint64",
      "defined_out": [
        "dispute_data#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%1#0"
      ]
    },
    "1617": {
      "op": "frame_dig 5",
      "defined_out": [
        "current_round#0",
        "dispute_data#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%1#0",
        "current_round#0"
      ]
    },
    "1619": {
      "op": "<",
      "defined_out": [
        "current_round#0",
        "dispute_data#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%2#0"
      ]
    },
    "1620": {
      "op": "bz vote_on_dispute_after_if_else@4",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1623": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "current_round#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x0000000000000000"
      ]
    },
    "1624": {
      "op": "frame_bury 0"
    },
    "1626": {
      "retsub": true,
      "op": "retsub"
    },
    "1627": {
      "block": "vote_on_dispute_after_if_else@4",
      "stack_in": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1629": {
      "op": "intc_2 // 50",
      "defined_out": [
        "50",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "50"
      ]
    },
    "1630": {
      "op": "extract_uint64",
      "defined_out": [
        "dispute_data#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%4#0"
      ]
    },
    "1631": {
      "op": "bz vote_on_dispute_after_if_else@6",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1634": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x0000000000000000"
      ]
    },
    "1635": {
      "op": "frame_bury 0"
    },
    "1637": {
      "retsub": true,
      "op": "retsub"
    },
    "1638": {
      "block": "vote_on_dispute_after_if_else@6",
      "stack_in": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "bytec 7 // \"jurors\"",
      "defined_out": [
        "\"jurors\""
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "\"jurors\""
      ]
    },
    "1640": {
      "op": "frame_dig 4",
      "defined_out": [
        "\"jurors\"",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "\"jurors\"",
        "caller#0"
      ]
    },
    "1642": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%2#0"
      ]
    },
    "1643": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0"
      ]
    },
    "1644": {
      "op": "frame_bury 0",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%2#0"
      ]
    },
    "1646": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0",
        "juror_data#0",
        "juror_exists#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_data#0",
        "juror_exists#0"
      ]
    },
    "1647": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_exists#0",
        "juror_data#0"
      ]
    },
    "1648": {
      "op": "frame_bury 2",
      "defined_out": [
        "box_prefixed_key%2#0",
        "caller#0",
        "juror_data#0",
        "juror_exists#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_exists#0"
      ]
    },
    "1650": {
      "op": "bnz vote_on_dispute_after_if_else@8",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1653": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "box_prefixed_key%2#0",
        "caller#0",
        "juror_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x0000000000000000"
      ]
    },
    "1654": {
      "op": "frame_bury 0"
    },
    "1656": {
      "retsub": true,
      "op": "retsub"
    },
    "1657": {
      "block": "vote_on_dispute_after_if_else@8",
      "stack_in": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "caller#0"
      ]
    },
    "1659": {
      "op": "bytec 23 // 0x64697370757465",
      "defined_out": [
        "0x64697370757465",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "caller#0",
        "0x64697370757465"
      ]
    },
    "1661": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "juror_dispute_key#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_dispute_key#0"
      ]
    },
    "1662": {
      "op": "bytec 12 // \"juror_disputes\"",
      "defined_out": [
        "\"juror_disputes\"",
        "caller#0",
        "juror_dispute_key#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_dispute_key#0",
        "\"juror_disputes\""
      ]
    },
    "1664": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "\"juror_disputes\"",
        "juror_dispute_key#0"
      ]
    },
    "1665": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%4#0",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%4#0"
      ]
    },
    "1666": {
      "op": "box_get",
      "defined_out": [
        "caller#0",
        "is_assigned#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "maybe_value%4#0",
        "is_assigned#0"
      ]
    },
    "1667": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "is_assigned#0"
      ]
    },
    "1669": {
      "op": "bnz vote_on_dispute_after_if_else@10",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1672": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x0000000000000000"
      ]
    },
    "1673": {
      "op": "frame_bury 0"
    },
    "1675": {
      "retsub": true,
      "op": "retsub"
    },
    "1676": {
      "block": "vote_on_dispute_after_if_else@10",
      "stack_in": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "juror_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_data#0"
      ]
    },
    "1678": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "juror_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_data#0",
        "64"
      ]
    },
    "1680": {
      "op": "extract_uint64",
      "defined_out": [
        "juror_data#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%7#0"
      ]
    },
    "1681": {
      "op": "frame_dig 5",
      "defined_out": [
        "current_round#0",
        "juror_data#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%7#0",
        "current_round#0"
      ]
    },
    "1683": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "current_round#0",
        "tmp%7#0"
      ]
    },
    "1684": {
      "op": "-",
      "defined_out": [
        "current_round#0",
        "juror_data#0",
        "rounds_since_last_vote#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "rounds_since_last_vote#0"
      ]
    },
    "1685": {
      "op": "intc_3 // 10",
      "defined_out": [
        "10",
        "current_round#0",
        "juror_data#0",
        "rounds_since_last_vote#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "rounds_since_last_vote#0",
        "10"
      ]
    },
    "1686": {
      "op": ">=",
      "defined_out": [
        "current_round#0",
        "juror_data#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%8#0"
      ]
    },
    "1687": {
      "error": "Juror voted too recently",
      "op": "assert // Juror voted too recently",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1688": {
      "op": "bytec 23 // 0x64697370757465",
      "defined_out": [
        "0x64697370757465",
        "current_round#0",
        "juror_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x64697370757465"
      ]
    },
    "1690": {
      "op": "frame_dig 4",
      "defined_out": [
        "0x64697370757465",
        "caller#0",
        "current_round#0",
        "juror_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x64697370757465",
        "caller#0"
      ]
    },
    "1692": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "current_round#0",
        "juror_data#0",
        "vote_key#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "vote_key#0"
      ]
    },
    "1693": {
      "op": "pushbytes \"juror_votes\"",
      "defined_out": [
        "\"juror_votes\"",
        "caller#0",
        "current_round#0",
        "juror_data#0",
        "vote_key#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "vote_key#0",
        "\"juror_votes\""
      ]
    },
    "1706": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "\"juror_votes\"",
        "vote_key#0"
      ]
    },
    "1707": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "juror_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%5#0"
      ]
    },
    "1708": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%5#0",
        "box_prefixed_key%5#0"
      ]
    },
    "1709": {
      "op": "frame_bury 1",
      "defined_out": [
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "juror_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%5#0"
      ]
    },
    "1711": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "existing_vote#0",
        "juror_data#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "maybe_value%5#0",
        "existing_vote#0"
      ]
    },
    "1712": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "existing_vote#0"
      ]
    },
    "1714": {
      "op": "bz vote_on_dispute_after_if_else@12",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1717": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "juror_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x0000000000000000"
      ]
    },
    "1718": {
      "op": "frame_bury 0"
    },
    "1720": {
      "retsub": true,
      "op": "retsub"
    },
    "1721": {
      "block": "vote_on_dispute_after_if_else@12",
      "stack_in": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "current_round#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "current_round#0"
      ]
    },
    "1723": {
      "op": "itob",
      "defined_out": [
        "current_round#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "val_as_bytes%0#0"
      ]
    },
    "1724": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1725": {
      "op": "frame_bury 3",
      "defined_out": [
        "current_round#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "val_as_bytes%0#0"
      ]
    },
    "1727": {
      "op": "frame_dig 4",
      "defined_out": [
        "caller#0",
        "current_round#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "val_as_bytes%0#0",
        "caller#0"
      ]
    },
    "1729": {
      "op": "frame_dig -1",
      "defined_out": [
        "caller#0",
        "current_round#0",
        "val_as_bytes%0#0",
        "vote#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "vote#0 (copy)"
      ]
    },
    "1731": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "current_round#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1732": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "1733": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "current_round#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1734": {
      "op": "frame_dig -2",
      "defined_out": [
        "caller#0",
        "current_round#0",
        "dispute_id#0 (copy)",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "encoded_tuple_buffer%3#0",
        "dispute_id#0 (copy)"
      ]
    },
    "1736": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "current_round#0",
        "val_as_bytes%0#0",
        "vote_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "vote_data#0"
      ]
    },
    "1737": {
      "op": "frame_dig 1",
      "defined_out": [
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "val_as_bytes%0#0",
        "vote_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "vote_data#0",
        "box_prefixed_key%5#0"
      ]
    },
    "1739": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%5#0",
        "vote_data#0"
      ]
    },
    "1740": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1741": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "vote#0 (copy)"
      ]
    },
    "1743": {
      "op": "btoi",
      "defined_out": [
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "tmp%9#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0"
      ]
    },
    "1744": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "tmp%9#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%9#0",
        "1"
      ]
    },
    "1745": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "tmp%10#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%10#0"
      ]
    },
    "1746": {
      "op": "bz vote_on_dispute_else_body@14",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1749": {
      "op": "frame_dig 7",
      "defined_out": [
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "dispute_data#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1751": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "dispute_data#0",
        "dispute_data#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ]
    },
    "1752": {
      "op": "pushint 58 // 58",
      "defined_out": [
        "58",
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "dispute_data#0",
        "dispute_data#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "dispute_data#0 (copy)",
        "58"
      ]
    },
    "1754": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "dispute_data#0",
        "tmp%12#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "tmp%12#0"
      ]
    },
    "1755": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "tmp%12#0",
        "1"
      ]
    },
    "1756": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "dispute_data#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "to_encode%0#0"
      ]
    },
    "1757": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "dispute_data#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "val_as_bytes%1#0"
      ]
    },
    "1758": {
      "op": "replace2 58",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1760": {
      "op": "frame_bury 7",
      "defined_out": [
        "box_prefixed_key%5#0",
        "caller#0",
        "current_round#0",
        "dispute_data#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1762": {
      "block": "vote_on_dispute_after_if_else@15",
      "stack_in": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1764": {
      "op": "dup",
      "defined_out": [
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ]
    },
    "1765": {
      "op": "pushint 74 // 74",
      "defined_out": [
        "74",
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "dispute_data#0 (copy)",
        "74"
      ]
    },
    "1767": {
      "op": "extract_uint64",
      "defined_out": [
        "dispute_data#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "tmp%16#0"
      ]
    },
    "1768": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "dispute_data#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "tmp%16#0",
        "1"
      ]
    },
    "1769": {
      "op": "+",
      "defined_out": [
        "dispute_data#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "to_encode%2#0"
      ]
    },
    "1770": {
      "op": "itob",
      "defined_out": [
        "dispute_data#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "val_as_bytes%3#0"
      ]
    },
    "1771": {
      "op": "replace2 74",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1773": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1774": {
      "op": "frame_bury 7",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1776": {
      "op": "frame_dig 6",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1778": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1779": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "1780": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1781": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "dispute_data#0 (copy)"
      ]
    },
    "1783": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1784": {
      "op": "frame_dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "juror_data#0"
      ]
    },
    "1786": {
      "op": "frame_dig 3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_data#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "juror_data#0",
        "val_as_bytes%0#0"
      ]
    },
    "1788": {
      "op": "replace2 64",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "juror_data#0"
      ]
    },
    "1790": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_data#0",
        "juror_data#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "juror_data#0",
        "juror_data#0 (copy)"
      ]
    },
    "1791": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_data#0",
        "juror_data#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "juror_data#0",
        "juror_data#0 (copy)",
        "40"
      ]
    },
    "1793": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_data#0",
        "tmp%18#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "juror_data#0",
        "tmp%18#0"
      ]
    },
    "1794": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "juror_data#0",
        "tmp%18#0",
        "1"
      ]
    },
    "1795": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_data#0",
        "to_encode%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "juror_data#0",
        "to_encode%3#0"
      ]
    },
    "1796": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "juror_data#0",
        "val_as_bytes%5#0"
      ]
    },
    "1797": {
      "op": "replace2 40",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "juror_data#0"
      ]
    },
    "1799": {
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "dispute_data#0",
        "juror_data#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "juror_data#0",
        "box_prefixed_key%2#0"
      ]
    },
    "1801": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "box_prefixed_key%2#0",
        "juror_data#0"
      ]
    },
    "1802": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1803": {
      "op": "pushint 74 // 74",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "74"
      ]
    },
    "1805": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "dispute_data#0",
        "juror_data#0",
        "total_votes#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "total_votes#0"
      ]
    },
    "1806": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "dispute_data#0",
        "juror_data#0",
        "total_votes#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "total_votes#0",
        "7"
      ]
    },
    "1808": {
      "op": ">=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "dispute_data#0",
        "juror_data#0",
        "tmp%20#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%20#0"
      ]
    },
    "1809": {
      "op": "bz vote_on_dispute_after_if_else@25",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1812": {
      "op": "frame_dig 7",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1814": {
      "op": "pushint 58 // 58",
      "defined_out": [
        "58",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "dispute_data#0",
        "juror_data#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "58"
      ]
    },
    "1816": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "dispute_data#0",
        "juror_data#0",
        "tmp%22#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%22#0"
      ]
    },
    "1817": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "dispute_data#0",
        "juror_data#0",
        "tmp%22#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%22#0",
        "4"
      ]
    },
    "1819": {
      "op": ">=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "dispute_data#0",
        "juror_data#0",
        "tmp%23#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%23#0"
      ]
    },
    "1820": {
      "op": "bz vote_on_dispute_else_body@18",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1823": {
      "op": "frame_dig 7",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1825": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "dispute_data#0",
        "juror_data#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "0x0000000000000001"
      ]
    },
    "1826": {
      "op": "replace2 50",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1828": {
      "op": "frame_dig 3",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "val_as_bytes%0#0"
      ]
    },
    "1830": {
      "op": "replace2 90",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1832": {
      "op": "frame_bury 7",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1834": {
      "op": "bytec 18 // \"dispute_resolved\"",
      "defined_out": [
        "\"dispute_resolved\"",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "dispute_data#0",
        "juror_data#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "\"dispute_resolved\""
      ]
    },
    "1836": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute._update_stats",
      "op": "callsub _update_stats",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1839": {
      "block": "vote_on_dispute_after_if_else@19",
      "stack_in": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1841": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1842": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "1843": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1844": {
      "op": "frame_dig 7",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1846": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "dispute_data#0 (copy)",
        "dispute_data#0 (copy)"
      ]
    },
    "1847": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "dispute_data#0 (copy)"
      ]
    },
    "1849": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "1850": {
      "op": "intc_2 // 50",
      "defined_out": [
        "50",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "50"
      ]
    },
    "1851": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%25#0"
      ]
    },
    "1852": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%25#0",
        "1"
      ]
    },
    "1853": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%26#0"
      ]
    },
    "1854": {
      "op": "bz vote_on_dispute_ternary_false@21",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1857": {
      "op": "pushbytes 0x0010646973707574655f7265736f6c766564",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "resolution_action#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "resolution_action#0"
      ]
    },
    "1877": {
      "block": "vote_on_dispute_ternary_merge@22",
      "stack_in": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "resolution_action#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "resolution_action#0",
        "dispute_id#0 (copy)"
      ]
    },
    "1879": {
      "op": "frame_dig 4",
      "defined_out": [
        "caller#0",
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "resolution_action#0",
        "dispute_id#0 (copy)",
        "caller#0"
      ]
    },
    "1881": {
      "op": "uncover 2",
      "defined_out": [
        "caller#0",
        "dispute_id#0 (copy)",
        "resolution_action#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_id#0 (copy)",
        "caller#0",
        "resolution_action#0"
      ]
    },
    "1883": {
      "op": "frame_dig -1",
      "defined_out": [
        "caller#0",
        "dispute_id#0 (copy)",
        "resolution_action#0",
        "vote#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_id#0 (copy)",
        "caller#0",
        "resolution_action#0",
        "vote#0 (copy)"
      ]
    },
    "1885": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute._log_event",
      "op": "callsub _log_event",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1888": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0"
      ]
    },
    "1889": {
      "op": "bytec 8 // \"insurance_contract\"",
      "defined_out": [
        "\"insurance_contract\"",
        "0",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0",
        "\"insurance_contract\""
      ]
    },
    "1891": {
      "op": "app_global_get_ex",
      "defined_out": [
        "caller#0",
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1892": {
      "error": "check self.insurance_contract exists",
      "op": "assert // check self.insurance_contract exists",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "maybe_value%6#0"
      ]
    },
    "1893": {
      "op": "global ZeroAddress",
      "defined_out": [
        "caller#0",
        "maybe_value%6#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "maybe_value%6#0",
        "tmp%27#0"
      ]
    },
    "1895": {
      "op": "!=",
      "defined_out": [
        "caller#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%28#0"
      ]
    },
    "1896": {
      "op": "bz vote_on_dispute_after_if_else@24",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1899": {
      "op": "pushbytes 0x43524f53535f434f4e54524143545f534554544c454d454e54736574746c656d656e745f747269676765726564",
      "defined_out": [
        "0x43524f53535f434f4e54524143545f534554544c454d454e54736574746c656d656e745f747269676765726564",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x43524f53535f434f4e54524143545f534554544c454d454e54736574746c656d656e745f747269676765726564"
      ]
    },
    "1946": {
      "op": "log",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1947": {
      "block": "vote_on_dispute_after_if_else@24",
      "stack_in": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "pushbytes 0x444953505554455f5245534f4c564544",
      "defined_out": [
        "0x444953505554455f5245534f4c564544"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x444953505554455f5245534f4c564544"
      ]
    },
    "1965": {
      "op": "frame_dig 4",
      "defined_out": [
        "0x444953505554455f5245534f4c564544",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x444953505554455f5245534f4c564544",
        "caller#0"
      ]
    },
    "1967": {
      "op": "concat",
      "defined_out": [
        "caller#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "tmp%31#0"
      ]
    },
    "1968": {
      "op": "log",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1969": {
      "block": "vote_on_dispute_after_if_else@25",
      "stack_in": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "bytec 21 // \"vote_cast\"",
      "defined_out": [
        "\"vote_cast\""
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "\"vote_cast\""
      ]
    },
    "1971": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute._update_stats",
      "op": "callsub _update_stats",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1974": {
      "op": "frame_dig -2",
      "defined_out": [
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_id#0 (copy)"
      ]
    },
    "1976": {
      "op": "frame_dig 4",
      "defined_out": [
        "caller#0",
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_id#0 (copy)",
        "caller#0"
      ]
    },
    "1978": {
      "op": "pushbytes 0x0009766f74655f63617374",
      "defined_out": [
        "0x0009766f74655f63617374",
        "caller#0",
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_id#0 (copy)",
        "caller#0",
        "0x0009766f74655f63617374"
      ]
    },
    "1991": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x0009766f74655f63617374",
        "caller#0",
        "dispute_id#0 (copy)",
        "vote#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_id#0 (copy)",
        "caller#0",
        "0x0009766f74655f63617374",
        "vote#0 (copy)"
      ]
    },
    "1993": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute._log_event",
      "op": "callsub _log_event",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "1996": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "caller#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x0000000000000001"
      ]
    },
    "1997": {
      "op": "frame_bury 0"
    },
    "1999": {
      "retsub": true,
      "op": "retsub"
    },
    "2000": {
      "block": "vote_on_dispute_ternary_false@21",
      "stack_in": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "pushbytes 0x0010646973707574655f72656a6563746564",
      "defined_out": [
        "resolution_action#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "resolution_action#0"
      ]
    },
    "2020": {
      "op": "b vote_on_dispute_ternary_merge@22"
    },
    "2023": {
      "block": "vote_on_dispute_else_body@18",
      "stack_in": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "2025": {
      "op": "bytec 24 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "0x0000000000000002"
      ]
    },
    "2027": {
      "op": "replace2 50",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "2029": {
      "op": "frame_dig 3",
      "defined_out": [
        "dispute_data#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "val_as_bytes%0#0"
      ]
    },
    "2031": {
      "op": "replace2 90",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "2033": {
      "op": "frame_bury 7",
      "defined_out": [
        "dispute_data#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "2035": {
      "op": "bytec 19 // \"dispute_rejected\"",
      "defined_out": [
        "\"dispute_rejected\"",
        "dispute_data#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "\"dispute_rejected\""
      ]
    },
    "2037": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute._update_stats",
      "op": "callsub _update_stats",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "2040": {
      "op": "b vote_on_dispute_after_if_else@19"
    },
    "2043": {
      "block": "vote_on_dispute_else_body@14",
      "stack_in": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "2045": {
      "op": "dup",
      "defined_out": [
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ]
    },
    "2046": {
      "op": "pushint 66 // 66",
      "defined_out": [
        "66",
        "dispute_data#0",
        "dispute_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "dispute_data#0 (copy)",
        "66"
      ]
    },
    "2048": {
      "op": "extract_uint64",
      "defined_out": [
        "dispute_data#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "tmp%14#0"
      ]
    },
    "2049": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "dispute_data#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "tmp%14#0",
        "1"
      ]
    },
    "2050": {
      "op": "+",
      "defined_out": [
        "dispute_data#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "to_encode%1#0"
      ]
    },
    "2051": {
      "op": "itob",
      "defined_out": [
        "dispute_data#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "val_as_bytes%2#0"
      ]
    },
    "2052": {
      "op": "replace2 66",
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "2054": {
      "op": "frame_bury 7",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%5#0",
        "juror_data#0",
        "val_as_bytes%0#0",
        "caller#0",
        "current_round#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "2056": {
      "op": "b vote_on_dispute_after_if_else@15"
    },
    "2059": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.get_dispute",
      "params": {
        "dispute_id#0": "bytes"
      },
      "block": "get_dispute",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2062": {
      "op": "frame_dig -1",
      "defined_out": [
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "dispute_id#0 (copy)"
      ]
    },
    "2064": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "2065": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2066": {
      "op": "bytec 4 // \"disputes\"",
      "defined_out": [
        "\"disputes\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"disputes\""
      ]
    },
    "2068": {
      "op": "swap",
      "stack_out": [
        "\"disputes\"",
        "encoded_value%0#0"
      ]
    },
    "2069": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2070": {
      "op": "box_get",
      "defined_out": [
        "dispute_data#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "maybe_exists%0#0"
      ]
    },
    "2071": {
      "op": "pop",
      "stack_out": [
        "dispute_data#0"
      ]
    },
    "2072": {
      "op": "dup",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "2073": {
      "error": "Index access is out of bounds",
      "op": "extract 8 32 // on error: Index access is out of bounds",
      "defined_out": [
        "dispute_data#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "tmp%0#0"
      ]
    },
    "2076": {
      "op": "global ZeroAddress",
      "defined_out": [
        "dispute_data#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2078": {
      "op": "==",
      "defined_out": [
        "dispute_data#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "tmp%2#0"
      ]
    },
    "2079": {
      "op": "bz get_dispute_after_if_else@2",
      "stack_out": [
        "dispute_data#0"
      ]
    },
    "2082": {
      "op": "pushbytes base32(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)",
      "defined_out": [
        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
        "dispute_data#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ]
    },
    "2184": {
      "op": "swap"
    },
    "2185": {
      "retsub": true,
      "op": "retsub"
    },
    "2186": {
      "block": "get_dispute_after_if_else@2",
      "stack_in": [
        "dispute_data#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "2188": {
      "op": "swap"
    },
    "2189": {
      "retsub": true,
      "op": "retsub"
    },
    "2190": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.get_juror_info",
      "params": {
        "juror_address#0": "bytes"
      },
      "block": "get_juror_info",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2193": {
      "op": "bytec 7 // \"jurors\"",
      "defined_out": [
        "\"jurors\""
      ],
      "stack_out": [
        "\"jurors\""
      ]
    },
    "2195": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"jurors\"",
        "juror_address#0 (copy)"
      ],
      "stack_out": [
        "\"jurors\"",
        "juror_address#0 (copy)"
      ]
    },
    "2197": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2198": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "exists#0"
      ]
    },
    "2199": {
      "op": "bnz get_juror_info_after_if_else@2",
      "stack_out": [
        "juror_data#0"
      ]
    },
    "2202": {
      "op": "frame_dig -1",
      "stack_out": [
        "juror_data#0",
        "juror_address#0 (copy)"
      ]
    },
    "2204": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "juror_address#0 (copy)",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "juror_address#0 (copy)",
        "0x0000000000000000"
      ]
    },
    "2205": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2206": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%2#0",
        "0x0000000000000000"
      ]
    },
    "2207": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2208": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%3#0",
        "0x0000000000000000"
      ]
    },
    "2209": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2210": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%4#0",
        "0x0000000000000000"
      ]
    },
    "2211": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2212": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%5#0",
        "0x0000000000000000"
      ]
    },
    "2213": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2214": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%6#0",
        "0x0000000000000000"
      ]
    },
    "2215": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2216": {
      "op": "swap"
    },
    "2217": {
      "retsub": true,
      "op": "retsub"
    },
    "2218": {
      "block": "get_juror_info_after_if_else@2",
      "stack_in": [
        "juror_data#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "juror_data#0"
      ]
    },
    "2220": {
      "op": "swap"
    },
    "2221": {
      "retsub": true,
      "op": "retsub"
    },
    "2222": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.get_total_jurors",
      "params": {},
      "block": "get_total_jurors",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2223": {
      "op": "bytec_3 // \"total_jurors\"",
      "defined_out": [
        "\"total_jurors\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_jurors\""
      ]
    },
    "2224": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2225": {
      "error": "check self.total_jurors exists",
      "op": "assert // check self.total_jurors exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2226": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "2227": {
      "retsub": true,
      "op": "retsub"
    },
    "2228": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.get_statistics",
      "params": {},
      "block": "get_statistics",
      "stack_in": [],
      "op": "bytec 11 // \"stats_box\"",
      "defined_out": [
        "\"stats_box\""
      ],
      "stack_out": [
        "\"stats_box\""
      ]
    },
    "2230": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2231": {
      "error": "check self.stats_box exists",
      "op": "assert // check self.stats_box exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2232": {
      "retsub": true,
      "op": "retsub"
    },
    "2233": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.get_event",
      "params": {
        "event_id#0": "bytes"
      },
      "block": "get_event",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2236": {
      "op": "frame_dig -1",
      "defined_out": [
        "event_id#0 (copy)"
      ],
      "stack_out": [
        "event_id#0 (copy)"
      ]
    },
    "2238": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "2239": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2240": {
      "op": "bytec 16 // \"event_log\"",
      "defined_out": [
        "\"event_log\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"event_log\""
      ]
    },
    "2242": {
      "op": "swap",
      "stack_out": [
        "\"event_log\"",
        "encoded_value%0#0"
      ]
    },
    "2243": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2244": {
      "op": "box_get",
      "defined_out": [
        "event#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "event#0",
        "maybe_exists%0#0"
      ]
    },
    "2245": {
      "op": "pop",
      "stack_out": [
        "event#0"
      ]
    },
    "2246": {
      "op": "dup",
      "defined_out": [
        "event#0"
      ],
      "stack_out": [
        "event#0",
        "event#0"
      ]
    },
    "2247": {
      "op": "pushbytes base32(AAAAAAAAAAAAAAB2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)",
      "defined_out": [
        "AAAAAAAAAAAAAAB2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
        "event#0"
      ],
      "stack_out": [
        "event#0",
        "event#0",
        "AAAAAAAAAAAAAAB2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ]
    },
    "2309": {
      "op": "==",
      "defined_out": [
        "event#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "event#0",
        "tmp%1#0"
      ]
    },
    "2310": {
      "op": "bz get_event_after_if_else@2",
      "stack_out": [
        "event#0"
      ]
    },
    "2313": {
      "op": "pushbytes base32(AAAAAAAAAAAAAAB2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPMV3GK3TUL5XG65C7MZXXK3TE)",
      "defined_out": [
        "AAAAAAAAAAAAAAB2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPMV3GK3TUL5XG65C7MZXXK3TE",
        "event#0"
      ],
      "stack_out": [
        "event#0",
        "AAAAAAAAAAAAAAB2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPMV3GK3TUL5XG65C7MZXXK3TE"
      ]
    },
    "2390": {
      "op": "swap"
    },
    "2391": {
      "retsub": true,
      "op": "retsub"
    },
    "2392": {
      "block": "get_event_after_if_else@2",
      "stack_in": [
        "event#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "event#0"
      ],
      "stack_out": [
        "event#0",
        "event#0"
      ]
    },
    "2394": {
      "op": "swap"
    },
    "2395": {
      "retsub": true,
      "op": "retsub"
    },
    "2396": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.get_recent_events",
      "params": {
        "limit#0": "bytes"
      },
      "block": "get_recent_events",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2399": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2400": {
      "op": "bytec 10 // \"next_event_id\"",
      "defined_out": [
        "\"next_event_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"next_event_id\""
      ]
    },
    "2402": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2403": {
      "error": "check self.next_event_id exists",
      "op": "assert // check self.next_event_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2404": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "2405": {
      "op": "-",
      "defined_out": [
        "total_events#0"
      ],
      "stack_out": [
        "total_events#0"
      ]
    },
    "2406": {
      "op": "dup",
      "defined_out": [
        "total_events#0"
      ],
      "stack_out": [
        "total_events#0",
        "total_events#0"
      ]
    },
    "2407": {
      "op": "frame_dig -1",
      "defined_out": [
        "limit#0 (copy)",
        "total_events#0"
      ],
      "stack_out": [
        "total_events#0",
        "total_events#0",
        "limit#0 (copy)"
      ]
    },
    "2409": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "total_events#0"
      ],
      "stack_out": [
        "total_events#0",
        "total_events#0",
        "tmp%0#0"
      ]
    },
    "2410": {
      "op": "-",
      "defined_out": [
        "tmp%1#0",
        "total_events#0"
      ],
      "stack_out": [
        "total_events#0",
        "tmp%1#0"
      ]
    },
    "2411": {
      "op": "intc_0 // 1",
      "stack_out": [
        "total_events#0",
        "tmp%1#0",
        "1"
      ]
    },
    "2412": {
      "op": "+",
      "defined_out": [
        "start_id#0",
        "total_events#0"
      ],
      "stack_out": [
        "total_events#0",
        "start_id#0"
      ]
    },
    "2413": {
      "op": "dup",
      "defined_out": [
        "start_id#0",
        "total_events#0"
      ],
      "stack_out": [
        "total_events#0",
        "start_id#0",
        "start_id#0"
      ]
    },
    "2414": {
      "op": "intc_0 // 1",
      "stack_out": [
        "total_events#0",
        "start_id#0",
        "start_id#0",
        "1"
      ]
    },
    "2415": {
      "op": "<",
      "defined_out": [
        "start_id#0",
        "tmp%2#0",
        "total_events#0"
      ],
      "stack_out": [
        "total_events#0",
        "start_id#0",
        "tmp%2#0"
      ]
    },
    "2416": {
      "op": "bz get_recent_events_after_if_else@2",
      "stack_out": [
        "total_events#0",
        "start_id#0"
      ]
    },
    "2419": {
      "op": "intc_0 // 1",
      "stack_out": [
        "total_events#0",
        "start_id#0",
        "start_id#0"
      ]
    },
    "2420": {
      "op": "frame_bury 1",
      "stack_out": [
        "total_events#0",
        "start_id#0"
      ]
    },
    "2422": {
      "block": "get_recent_events_after_if_else@2",
      "stack_in": [
        "total_events#0",
        "start_id#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "total_events#0"
      ],
      "stack_out": [
        "total_events#0",
        "start_id#0",
        "total_events#0"
      ]
    },
    "2424": {
      "op": "itob",
      "defined_out": [
        "total_events#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "total_events#0",
        "start_id#0",
        "val_as_bytes%0#0"
      ]
    },
    "2425": {
      "op": "frame_dig 1",
      "defined_out": [
        "start_id#0",
        "total_events#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "total_events#0",
        "start_id#0",
        "val_as_bytes%0#0",
        "start_id#0"
      ]
    },
    "2427": {
      "op": "itob",
      "defined_out": [
        "start_id#0",
        "total_events#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "total_events#0",
        "start_id#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2428": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "start_id#0",
        "total_events#0"
      ],
      "stack_out": [
        "total_events#0",
        "start_id#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2429": {
      "op": "frame_bury 0"
    },
    "2431": {
      "retsub": true,
      "op": "retsub"
    },
    "2432": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.get_dispute_status",
      "params": {
        "dispute_id#0": "bytes"
      },
      "block": "get_dispute_status",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2435": {
      "op": "frame_dig -1",
      "defined_out": [
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "dispute_id#0 (copy)"
      ]
    },
    "2437": {
      "op": "btoi",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "2438": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2439": {
      "op": "bytec 4 // \"disputes\"",
      "defined_out": [
        "\"disputes\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"disputes\""
      ]
    },
    "2441": {
      "op": "swap",
      "stack_out": [
        "\"disputes\"",
        "encoded_value%0#0"
      ]
    },
    "2442": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2443": {
      "op": "box_get",
      "defined_out": [
        "dispute_data#0",
        "exists#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "exists#0"
      ]
    },
    "2444": {
      "op": "bnz get_dispute_status_after_if_else@2",
      "stack_out": [
        "dispute_data#0"
      ]
    },
    "2447": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "dispute_data#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "0x0000000000000000"
      ]
    },
    "2448": {
      "op": "swap"
    },
    "2449": {
      "retsub": true,
      "op": "retsub"
    },
    "2450": {
      "block": "get_dispute_status_after_if_else@2",
      "stack_in": [
        "dispute_data#0"
      ],
      "op": "global Round",
      "defined_out": [
        "current_round#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "current_round#0"
      ]
    },
    "2452": {
      "op": "frame_dig 0",
      "defined_out": [
        "current_round#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "current_round#0",
        "dispute_data#0"
      ]
    },
    "2454": {
      "op": "pushint 82 // 82",
      "defined_out": [
        "82",
        "current_round#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "current_round#0",
        "dispute_data#0",
        "82"
      ]
    },
    "2456": {
      "op": "extract_uint64",
      "defined_out": [
        "current_round#0",
        "dispute_data#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "current_round#0",
        "tmp%1#0"
      ]
    },
    "2457": {
      "op": ">",
      "defined_out": [
        "dispute_data#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "tmp%2#0"
      ]
    },
    "2458": {
      "op": "bz get_dispute_status_after_if_else@5",
      "stack_out": [
        "dispute_data#0"
      ]
    },
    "2461": {
      "op": "frame_dig 0",
      "stack_out": [
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "2463": {
      "op": "intc_2 // 50",
      "defined_out": [
        "50",
        "dispute_data#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "dispute_data#0",
        "50"
      ]
    },
    "2464": {
      "op": "extract_uint64",
      "defined_out": [
        "dispute_data#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "tmp%4#0"
      ]
    },
    "2465": {
      "op": "bnz get_dispute_status_after_if_else@5",
      "stack_out": [
        "dispute_data#0"
      ]
    },
    "2468": {
      "op": "bytec 13 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "dispute_data#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "0x0000000000000003"
      ]
    },
    "2470": {
      "op": "swap"
    },
    "2471": {
      "retsub": true,
      "op": "retsub"
    },
    "2472": {
      "block": "get_dispute_status_after_if_else@5",
      "stack_in": [
        "dispute_data#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "2474": {
      "error": "Index access is out of bounds",
      "op": "extract 50 8 // on error: Index access is out of bounds",
      "defined_out": [
        "dispute_data#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "dispute_data#0",
        "tmp%6#0"
      ]
    },
    "2477": {
      "op": "swap"
    },
    "2478": {
      "retsub": true,
      "op": "retsub"
    },
    "2479": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.get_active_disputes",
      "params": {},
      "block": "get_active_disputes",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "2482": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "active_count#9"
      ]
    },
    "2484": {
      "op": "intc_1 // 0"
    },
    "2485": {
      "op": "dup"
    },
    "2486": {
      "op": "bytec 6 // \"next_dispute_id\"",
      "defined_out": [
        "\"next_dispute_id\"",
        "0",
        "active_count#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "0",
        "\"next_dispute_id\""
      ]
    },
    "2488": {
      "op": "app_global_get_ex",
      "defined_out": [
        "active_count#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2489": {
      "op": "swap",
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "2490": {
      "op": "dup",
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2491": {
      "op": "uncover 2",
      "defined_out": [
        "active_count#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2493": {
      "error": "check self.next_dispute_id exists",
      "op": "assert // check self.next_dispute_id exists",
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "maybe_value%0#0"
      ]
    },
    "2494": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "active_count#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "2495": {
      "op": "-",
      "defined_out": [
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0"
      ]
    },
    "2496": {
      "op": "intc_0 // 1",
      "defined_out": [
        "active_count#0",
        "i#0",
        "maybe_value%0#0",
        "total_count#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0"
      ]
    },
    "2497": {
      "block": "get_active_disputes_for_header@1",
      "stack_in": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "i#0"
      ]
    },
    "2499": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "2501": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "2502": {
      "op": "bz get_active_disputes_after_for@6",
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0"
      ]
    },
    "2505": {
      "op": "frame_dig 4",
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "i#0"
      ]
    },
    "2507": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "encoded_value%0#0"
      ]
    },
    "2508": {
      "op": "bytec 4 // \"disputes\"",
      "defined_out": [
        "\"disputes\"",
        "encoded_value%0#0",
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "encoded_value%0#0",
        "\"disputes\""
      ]
    },
    "2510": {
      "op": "swap",
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "\"disputes\"",
        "encoded_value%0#0"
      ]
    },
    "2511": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2512": {
      "op": "box_get",
      "defined_out": [
        "dispute_data#0",
        "i#0",
        "maybe_exists%2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "dispute_data#0",
        "maybe_exists%2#0"
      ]
    },
    "2513": {
      "op": "pop",
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "dispute_data#0"
      ]
    },
    "2514": {
      "op": "intc_2 // 50",
      "defined_out": [
        "50",
        "dispute_data#0",
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "dispute_data#0",
        "50"
      ]
    },
    "2515": {
      "op": "extract_uint64",
      "defined_out": [
        "i#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "2516": {
      "op": "frame_dig 1",
      "defined_out": [
        "active_count#9",
        "i#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "tmp%1#0",
        "active_count#9"
      ]
    },
    "2518": {
      "op": "frame_bury 0",
      "defined_out": [
        "active_count#9",
        "i#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "2520": {
      "op": "bnz get_active_disputes_after_if_else@4",
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0"
      ]
    },
    "2523": {
      "op": "frame_dig 1",
      "defined_out": [
        "active_count#0",
        "active_count#9",
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "active_count#0"
      ]
    },
    "2525": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "active_count#0",
        "active_count#9",
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "active_count#0",
        "1"
      ]
    },
    "2526": {
      "op": "+",
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "active_count#9"
      ]
    },
    "2527": {
      "op": "frame_bury 0",
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0"
      ]
    },
    "2529": {
      "block": "get_active_disputes_after_if_else@4",
      "stack_in": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "active_count#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "active_count#0"
      ]
    },
    "2531": {
      "op": "frame_bury 1",
      "defined_out": [
        "active_count#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0"
      ]
    },
    "2533": {
      "op": "frame_dig 4",
      "defined_out": [
        "active_count#0",
        "i#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "i#0"
      ]
    },
    "2535": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "active_count#0",
        "i#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2536": {
      "op": "+",
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "i#0"
      ]
    },
    "2537": {
      "op": "frame_bury 4",
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0"
      ]
    },
    "2539": {
      "op": "b get_active_disputes_for_header@1"
    },
    "2542": {
      "block": "get_active_disputes_after_for@6",
      "stack_in": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "active_count#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "active_count#0"
      ]
    },
    "2544": {
      "op": "itob",
      "defined_out": [
        "active_count#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "val_as_bytes%0#0"
      ]
    },
    "2545": {
      "op": "frame_dig 3",
      "defined_out": [
        "active_count#0",
        "total_count#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "val_as_bytes%0#0",
        "total_count#0"
      ]
    },
    "2547": {
      "op": "itob",
      "defined_out": [
        "active_count#0",
        "total_count#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "2548": {
      "op": "concat",
      "defined_out": [
        "active_count#0",
        "encoded_tuple_buffer%2#0",
        "total_count#0"
      ],
      "stack_out": [
        "active_count#9",
        "active_count#0",
        "maybe_value%0#0",
        "total_count#0",
        "i#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2549": {
      "op": "frame_bury 0"
    },
    "2551": {
      "retsub": true,
      "op": "retsub"
    },
    "2552": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.validate_juror_eligibility",
      "params": {
        "juror_address#0": "bytes"
      },
      "block": "validate_juror_eligibility",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2555": {
      "op": "bytec 7 // \"jurors\"",
      "defined_out": [
        "\"jurors\""
      ],
      "stack_out": [
        "\"jurors\""
      ]
    },
    "2557": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"jurors\"",
        "juror_address#0 (copy)"
      ],
      "stack_out": [
        "\"jurors\"",
        "juror_address#0 (copy)"
      ]
    },
    "2559": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2560": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "exists#0"
      ]
    },
    "2561": {
      "op": "bnz validate_juror_eligibility_after_if_else@2",
      "stack_out": [
        "juror_data#0"
      ]
    },
    "2564": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "0x0000000000000000"
      ]
    },
    "2565": {
      "op": "swap"
    },
    "2566": {
      "retsub": true,
      "op": "retsub"
    },
    "2567": {
      "block": "validate_juror_eligibility_after_if_else@2",
      "stack_in": [
        "juror_data#0"
      ],
      "op": "global Round",
      "defined_out": [
        "current_round#0"
      ],
      "stack_out": [
        "juror_data#0",
        "current_round#0"
      ]
    },
    "2569": {
      "op": "frame_dig 0",
      "defined_out": [
        "current_round#0",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "current_round#0",
        "juror_data#0"
      ]
    },
    "2571": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "current_round#0",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "current_round#0",
        "juror_data#0",
        "56"
      ]
    },
    "2573": {
      "op": "extract_uint64",
      "defined_out": [
        "current_round#0",
        "juror_data#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "juror_data#0",
        "current_round#0",
        "tmp%1#0"
      ]
    },
    "2574": {
      "op": "-",
      "defined_out": [
        "juror_data#0",
        "rounds_since_registration#0"
      ],
      "stack_out": [
        "juror_data#0",
        "rounds_since_registration#0"
      ]
    },
    "2575": {
      "op": "intc_2 // 50",
      "defined_out": [
        "50",
        "juror_data#0",
        "rounds_since_registration#0"
      ],
      "stack_out": [
        "juror_data#0",
        "rounds_since_registration#0",
        "50"
      ]
    },
    "2576": {
      "op": "<",
      "defined_out": [
        "juror_data#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "juror_data#0",
        "tmp%2#0"
      ]
    },
    "2577": {
      "op": "bz validate_juror_eligibility_after_if_else@4",
      "stack_out": [
        "juror_data#0"
      ]
    },
    "2580": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "0x0000000000000001"
      ]
    },
    "2581": {
      "op": "swap"
    },
    "2582": {
      "retsub": true,
      "op": "retsub"
    },
    "2583": {
      "block": "validate_juror_eligibility_after_if_else@4",
      "stack_in": [
        "juror_data#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "juror_data#0"
      ]
    },
    "2585": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "juror_data#0",
        "32"
      ]
    },
    "2587": {
      "op": "extract_uint64",
      "defined_out": [
        "juror_data#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "juror_data#0",
        "tmp%4#0"
      ]
    },
    "2588": {
      "op": "intc_3 // 10",
      "defined_out": [
        "10",
        "juror_data#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "juror_data#0",
        "tmp%4#0",
        "10"
      ]
    },
    "2589": {
      "op": "<",
      "defined_out": [
        "juror_data#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "juror_data#0",
        "tmp%5#0"
      ]
    },
    "2590": {
      "op": "bz validate_juror_eligibility_after_if_else@6",
      "stack_out": [
        "juror_data#0"
      ]
    },
    "2593": {
      "op": "bytec 24 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "juror_data#0"
      ],
      "stack_out": [
        "juror_data#0",
        "0x0000000000000002"
      ]
    },
    "2595": {
      "op": "swap"
    },
    "2596": {
      "retsub": true,
      "op": "retsub"
    },
    "2597": {
      "block": "validate_juror_eligibility_after_if_else@6",
      "stack_in": [
        "juror_data#0"
      ],
      "op": "bytec 13 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003"
      ],
      "stack_out": [
        "juror_data#0",
        "0x0000000000000003"
      ]
    },
    "2599": {
      "op": "swap"
    },
    "2600": {
      "retsub": true,
      "op": "retsub"
    },
    "2601": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.get_juror_assigned_disputes",
      "params": {
        "juror_address#0": "bytes"
      },
      "block": "get_juror_assigned_disputes",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2604": {
      "op": "intc_1 // 0",
      "stack_out": [
        "assigned_disputes#9"
      ]
    },
    "2605": {
      "op": "pushbytes 0x"
    },
    "2607": {
      "op": "intc_1 // 0"
    },
    "2608": {
      "op": "bytec 6 // \"next_dispute_id\"",
      "defined_out": [
        "\"next_dispute_id\"",
        "0",
        "assigned_disputes#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "0",
        "\"next_dispute_id\""
      ]
    },
    "2610": {
      "op": "app_global_get_ex",
      "defined_out": [
        "assigned_disputes#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2611": {
      "error": "check self.next_dispute_id exists",
      "op": "assert // check self.next_dispute_id exists",
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0"
      ]
    },
    "2612": {
      "op": "intc_0 // 1",
      "defined_out": [
        "assigned_disputes#0",
        "dispute_id#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0"
      ]
    },
    "2613": {
      "block": "get_juror_assigned_disputes_for_header@1",
      "stack_in": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "dispute_id#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "dispute_id#0"
      ]
    },
    "2615": {
      "op": "frame_dig 2",
      "defined_out": [
        "dispute_id#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "dispute_id#0",
        "maybe_value%0#0"
      ]
    },
    "2617": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "dispute_id#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "continue_looping%0#0"
      ]
    },
    "2618": {
      "op": "bz get_juror_assigned_disputes_after_for@6",
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0"
      ]
    },
    "2621": {
      "op": "frame_dig -1",
      "defined_out": [
        "dispute_id#0",
        "juror_address#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "juror_address#0 (copy)"
      ]
    },
    "2623": {
      "op": "bytec 25 // 0x61737369676e6564",
      "defined_out": [
        "0x61737369676e6564",
        "dispute_id#0",
        "juror_address#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "juror_address#0 (copy)",
        "0x61737369676e6564"
      ]
    },
    "2625": {
      "op": "concat",
      "defined_out": [
        "dispute_id#0",
        "juror_dispute_key#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "juror_dispute_key#0"
      ]
    },
    "2626": {
      "op": "bytec 12 // \"juror_disputes\"",
      "defined_out": [
        "\"juror_disputes\"",
        "dispute_id#0",
        "juror_dispute_key#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "juror_dispute_key#0",
        "\"juror_disputes\""
      ]
    },
    "2628": {
      "op": "swap",
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "\"juror_disputes\"",
        "juror_dispute_key#0"
      ]
    },
    "2629": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_id#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2630": {
      "op": "box_get",
      "defined_out": [
        "dispute_id#0",
        "is_assigned#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "maybe_value%1#0",
        "is_assigned#0"
      ]
    },
    "2631": {
      "op": "bury 1",
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "is_assigned#0"
      ]
    },
    "2633": {
      "op": "frame_dig 1",
      "defined_out": [
        "assigned_disputes#9",
        "dispute_id#0",
        "is_assigned#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "is_assigned#0",
        "assigned_disputes#9"
      ]
    },
    "2635": {
      "op": "frame_bury 0",
      "defined_out": [
        "assigned_disputes#9",
        "dispute_id#0",
        "is_assigned#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "is_assigned#0"
      ]
    },
    "2637": {
      "op": "bz get_juror_assigned_disputes_after_if_else@4",
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0"
      ]
    },
    "2640": {
      "op": "frame_dig 1",
      "defined_out": [
        "assigned_disputes#0",
        "assigned_disputes#9",
        "dispute_id#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "assigned_disputes#0"
      ]
    },
    "2642": {
      "op": "bytec 25 // 0x61737369676e6564",
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "assigned_disputes#0",
        "0x61737369676e6564"
      ]
    },
    "2644": {
      "op": "concat",
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "assigned_disputes#9"
      ]
    },
    "2645": {
      "op": "frame_bury 0",
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0"
      ]
    },
    "2647": {
      "block": "get_juror_assigned_disputes_after_if_else@4",
      "stack_in": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "assigned_disputes#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "assigned_disputes#0"
      ]
    },
    "2649": {
      "op": "frame_bury 1",
      "defined_out": [
        "assigned_disputes#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0"
      ]
    },
    "2651": {
      "op": "frame_dig 3",
      "defined_out": [
        "assigned_disputes#0",
        "dispute_id#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "dispute_id#0"
      ]
    },
    "2653": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "assigned_disputes#0",
        "dispute_id#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "dispute_id#0",
        "1"
      ]
    },
    "2654": {
      "op": "+",
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "dispute_id#0"
      ]
    },
    "2655": {
      "op": "frame_bury 3",
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0"
      ]
    },
    "2657": {
      "op": "b get_juror_assigned_disputes_for_header@1"
    },
    "2660": {
      "block": "get_juror_assigned_disputes_after_for@6",
      "stack_in": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "assigned_disputes#0"
      ],
      "stack_out": [
        "assigned_disputes#9",
        "assigned_disputes#0",
        "maybe_value%0#0",
        "dispute_id#0",
        "assigned_disputes#0"
      ]
    },
    "2662": {
      "op": "frame_bury 0"
    },
    "2664": {
      "retsub": true,
      "op": "retsub"
    },
    "2665": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.is_juror_assigned_to_dispute",
      "params": {
        "juror_address#0": "bytes",
        "dispute_id#0": "bytes"
      },
      "block": "is_juror_assigned_to_dispute",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "2668": {
      "op": "frame_dig -2",
      "defined_out": [
        "juror_address#0 (copy)"
      ],
      "stack_out": [
        "juror_address#0 (copy)"
      ]
    },
    "2670": {
      "op": "pushbytes 0x646973707574655f6b6579",
      "defined_out": [
        "0x646973707574655f6b6579",
        "juror_address#0 (copy)"
      ],
      "stack_out": [
        "juror_address#0 (copy)",
        "0x646973707574655f6b6579"
      ]
    },
    "2683": {
      "op": "concat",
      "defined_out": [
        "juror_dispute_key#0"
      ],
      "stack_out": [
        "juror_dispute_key#0"
      ]
    },
    "2684": {
      "op": "bytec 12 // \"juror_disputes\"",
      "defined_out": [
        "\"juror_disputes\"",
        "juror_dispute_key#0"
      ],
      "stack_out": [
        "juror_dispute_key#0",
        "\"juror_disputes\""
      ]
    },
    "2686": {
      "op": "swap",
      "stack_out": [
        "\"juror_disputes\"",
        "juror_dispute_key#0"
      ]
    },
    "2687": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2688": {
      "op": "box_get",
      "defined_out": [
        "is_assigned#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "is_assigned#0"
      ]
    },
    "2689": {
      "op": "bury 1",
      "stack_out": [
        "is_assigned#0"
      ]
    },
    "2691": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "is_assigned#0"
      ],
      "stack_out": [
        "is_assigned#0",
        "0x0000000000000000"
      ]
    },
    "2692": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000000",
        "0x0000000000000001",
        "is_assigned#0"
      ],
      "stack_out": [
        "is_assigned#0",
        "0x0000000000000000",
        "0x0000000000000001"
      ]
    },
    "2693": {
      "op": "uncover 2",
      "stack_out": [
        "0x0000000000000000",
        "0x0000000000000001",
        "is_assigned#0"
      ]
    },
    "2695": {
      "op": "select",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0"
      ]
    },
    "2696": {
      "retsub": true,
      "op": "retsub"
    },
    "2697": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.mark_dispute_processed",
      "params": {
        "dispute_id#0": "bytes"
      },
      "block": "mark_dispute_processed",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2700": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2701": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"admin\""
      ]
    },
    "2703": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2704": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2705": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "2707": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2708": {
      "error": "Only admin can mark disputes as processed",
      "op": "assert // Only admin can mark disputes as processed",
      "stack_out": []
    },
    "2709": {
      "op": "frame_dig -1",
      "defined_out": [
        "dispute_id#0 (copy)"
      ],
      "stack_out": [
        "dispute_id#0 (copy)"
      ]
    },
    "2711": {
      "op": "btoi",
      "defined_out": [
        "dispute_id_uint#0"
      ],
      "stack_out": [
        "dispute_id_uint#0"
      ]
    },
    "2712": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "2713": {
      "op": "bytec 4 // \"disputes\"",
      "defined_out": [
        "\"disputes\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"disputes\""
      ]
    },
    "2715": {
      "op": "swap",
      "stack_out": [
        "\"disputes\"",
        "encoded_value%0#0"
      ]
    },
    "2716": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2717": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2718": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_exists#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_exists#0"
      ]
    },
    "2719": {
      "op": "bnz mark_dispute_processed_after_if_else@2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "2722": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x0000000000000000"
      ]
    },
    "2723": {
      "op": "frame_bury 0"
    },
    "2725": {
      "retsub": true,
      "op": "retsub"
    },
    "2726": {
      "block": "mark_dispute_processed_after_if_else@2",
      "stack_in": [
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "2728": {
      "op": "bytec 13 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "0x0000000000000003"
      ]
    },
    "2730": {
      "op": "replace2 50",
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0"
      ]
    },
    "2732": {
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2734": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "2735": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "2736": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_data#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2737": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "2738": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "2739": {
      "op": "bytec 20 // \"dispute_processed\"",
      "defined_out": [
        "\"dispute_processed\"",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "\"dispute_processed\""
      ]
    },
    "2741": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute._update_stats",
      "op": "callsub _update_stats",
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "2744": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0"
      ]
    },
    "2745": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0",
        "\"admin\""
      ]
    },
    "2747": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2748": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "maybe_value%3#0"
      ]
    },
    "2749": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_id#0 (copy)",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "maybe_value%3#0",
        "dispute_id#0 (copy)"
      ]
    },
    "2751": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_id#0 (copy)",
        "maybe_value%3#0"
      ]
    },
    "2752": {
      "op": "pushbytes 0x0011646973707574655f70726f636573736564",
      "defined_out": [
        "0x0011646973707574655f70726f636573736564",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_id#0 (copy)",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_id#0 (copy)",
        "maybe_value%3#0",
        "0x0011646973707574655f70726f636573736564"
      ]
    },
    "2773": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "0x0011646973707574655f70726f636573736564",
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_id#0 (copy)",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "dispute_id#0 (copy)",
        "maybe_value%3#0",
        "0x0011646973707574655f70726f636573736564",
        "0x0000000000000000"
      ]
    },
    "2774": {
      "callsub": "smart_contracts.dispute.contract.AgriGuardDispute._log_event",
      "op": "callsub _log_event",
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "2777": {
      "op": "pushbytes 0x444953505554455f50524f43455353454470726f636573736564",
      "defined_out": [
        "0x444953505554455f50524f43455353454470726f636573736564",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x444953505554455f50524f43455353454470726f636573736564"
      ]
    },
    "2805": {
      "op": "log",
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ]
    },
    "2806": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "box_prefixed_key%0#0",
        "dispute_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dispute_data#0",
        "0x0000000000000001"
      ]
    },
    "2807": {
      "op": "frame_bury 0"
    },
    "2809": {
      "retsub": true,
      "op": "retsub"
    },
    "2810": {
      "subroutine": "smart_contracts.dispute.contract.AgriGuardDispute.trigger_policy_processing",
      "params": {
        "policy_id#0": "bytes"
      },
      "block": "trigger_policy_processing",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2813": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2814": {
      "op": "bytec 8 // \"insurance_contract\"",
      "defined_out": [
        "\"insurance_contract\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"insurance_contract\""
      ]
    },
    "2816": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2817": {
      "error": "check self.insurance_contract exists",
      "op": "assert // check self.insurance_contract exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2818": {
      "op": "global ZeroAddress",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "2820": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2821": {
      "error": "Insurance contract not set",
      "op": "assert // Insurance contract not set",
      "stack_out": []
    },
    "2822": {
      "op": "pushbytes 0x545249474745525f504f4c4943595f50524f43455353494e47706f6c6963795f70726f63657373696e675f747269676765726564",
      "defined_out": [
        "0x545249474745525f504f4c4943595f50524f43455353494e47706f6c6963795f70726f63657373696e675f747269676765726564"
      ],
      "stack_out": [
        "0x545249474745525f504f4c4943595f50524f43455353494e47706f6c6963795f70726f63657373696e675f747269676765726564"
      ]
    },
    "2876": {
      "op": "log",
      "stack_out": []
    },
    "2877": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "0x0000000000000001"
      ]
    },
    "2878": {
      "retsub": true,
      "op": "retsub"
    }
  }
}